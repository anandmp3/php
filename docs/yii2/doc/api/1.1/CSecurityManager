<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    	<meta charset="UTF-8" />
		<meta name="keywords" content="yii framework, API, manual, class reference, CSecurityManager, version 1.1" />
	<meta name="description" content="CSecurityManager provides private keys, hashing and encryption functions." />
    <link rel="shortcut icon" type="image/x-icon" href="http://static.yiiframework.com/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="http://static.yiiframework.com/css/site-20130404102234.css" />

	<link title="Lives News for Yii Framework" rel="alternate" type="application/rss+xml" href="http://www.yiiframework.com/rss.xml/" />
	<link rel="stylesheet" type="text/css" href="/assets/a5450804/treeview/jquery.treeview.css" />
<link rel="stylesheet" type="text/css" href="/assets/a5450804/autocomplete/jquery.autocomplete.css" />
<title>CSecurityManager | Class Reference | Yii PHP Framework</title>
	<link rel="search" type="application/opensearchdescription+xml" title="Yii API Search" href="/search-api.xml" />
	<link rel="search" type="application/opensearchdescription+xml" title="Yii Site Search" href="/search-site.xml" />
</head>

<body class="mac">
<div class="layout-main">

	<div class="layout-main-shortcuts">
		<div class="container_12">
            <a style="color:darkred;" href="https://github.com/yiisoft/yii2">Github</a> &middot;
            <a style="color:darkgreen;" href="https://twitter.com/yiiframework">Twitter</a> &middot;
            <a style="color:darkblue;" href="https://www.facebook.com/groups/yiitalk/">Facebook</a> &middot;
            <a href="/doc/guide/">Guide</a> &middot;
            <a href="/doc/api/">Class Reference</a> &middot;
            <a href="/doc-2.0/guide-index.html">Guide 2.0</a> &middot;
            <a href="/doc-2.0/index.html">API 2.0</a> &middot;
            <a href="/wiki/">Wiki</a> &middot;
            <a href="/extensions/">Extensions</a> &middot;
            <a href="/forum/">Forum</a> &middot;
			<a href="/chat/">Live Chat</a> &middot;
                            <a href="/login/">Login</a>            		</div>
	</div>

	<div class="layout-main-bg">
		<div class="layout-main-header">
			<div class="container_12">
				<div class="grid_4">
					<a class="logo" href="/"><img alt="Yii Logo" src="http://static.yiiframework.com/css/img/logo.png" title="Yii Framework" width="284" height="64" /></a>				</div>
				<div class="grid_8 omega">
					<div class="nav">
						<ul class="menu" id="yw1">
<li class="about"><a class="main" href="/about/">About</a>
<ul>
<li><a href="/about/">About Yii</a></li>
<li><a href="/features/">Features</a></li>
<li><a href="/performance/">Performance</a></li>
<li><a href="/license/">License</a></li>
<li class="last"><a href="/contact/">Contact Us</a></li>
</ul>
</li>
<li class="downloads"><a class="main" href="/download/">Downloads</a>
<ul>
<li><a href="/download/">Framework</a></li>
<li><a href="/extensions/">Extensions</a></li>
<li><a href="/demos/">Demos</a></li>
<li class="last"><a href="/logo/">Logo</a></li>
</ul>
</li>
<li class="documentation active"><a class="main" href="/doc/">Documentation</a>
<ul>
<li><a href="/tour/">Take the Tour</a></li>
<li><a href="/tutorials/">Tutorials</a></li>
<li class="active"><a href="/doc/api/">Class Reference</a></li>
<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
<li><a href="/wiki/">Wiki</a></li>
<li><a href="/screencasts/">Screencasts</a></li>
<li class="last"><a href="/resources/">Resources</a></li>
</ul>
</li>
<li class="development"><a class="main" href="https://github.com/yiisoft/yii/commits/master">Development</a>
<ul>
<li><a href="/contribute/">Contribute to Yii</a></li>
<li><a href="https://github.com/yiisoft/yii/commits/master">Latest Updates</a></li>
<li><a href="https://github.com/yiisoft/yii/issues/new">Report a Bug</a></li>
<li class="last"><a href="/security/">Report a Security Issue</a></li>
</ul>
</li>
<li class="community last"><a class="main" href="/community/">Community</a>
<ul>
<li><a href="/forum/">Forum</a></li>
<li><a href="/chat/">Live Chat</a></li>
<li><a href="/news/">News</a></li>
<li><a href="/user/halloffame/">Hall of Fame</a></li>
<li class="last"><a href="/badges/">Badges</a></li>
</ul>
</li>
</ul>						<div class="search">
							<form method="get" action="/search/">
								<div class="keyword">
	                                <input name="q" value="" />
									<a href="#" title="search" class="global-search">search</a>
								</div>
							</form>
						</div>
					</div>
				</div>
				<div class="clear"></div>
			</div>
		</div>

		<div class="container_12">
						<div class="grid_12">
												<div class="layout-main-submenu">
					<ul>
						<li class="main">Documentation</li>
												<li><a href="/tour/">Take the Tour</a></li>
												<li><a href="/tutorials/">Tutorials</a></li>
												<li class="active"><a href="/doc/api/">Class Reference</a></li>
												<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
												<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
												<li><a href="/wiki/">Wiki</a></li>
												<li><a href="/screencasts/">Screencasts</a></li>
												<li><a href="/resources/">Resources</a></li>
											</ul>
				</div>
				
				
				
									<div class="layout-main-body">
						<div class="api-view">
    <div class="grid_3 alpha">
    	<div class="api-toc">
	<div class="versions">
		<strong>Versions</strong>
		<ul>
<li><span>1.1</span></li>
<li><a href="/doc/api/1.0/CSecurityManager">1.0</a></li>
		</ul>
	</div>
	<div class="search">
		<form action="/search/" method="get">			<strong>Search class reference</strong>
			<input type="hidden" name="type" value="api-suggest" />
			<input type="text" name="q" class="keyword g-text" />
			<input type="submit" value="Find" class="btn btn-info submit-button" />		</form>	</div>

<ul class="toc filetree" id="yw0">
<li class="closed"><span class="folder">system</span>
<ul>
<li><a href="/doc/api/1.1/Yii">&nbsp;Yii</a></li>
<li><a href="/doc/api/1.1/YiiBase">&nbsp;YiiBase</a></li>
</ul>
</li>
<li class="open"><span class="folder">system.base</span>
<ul>
<li><a href="/doc/api/1.1/CApplication">&nbsp;CApplication</a></li>
<li><a href="/doc/api/1.1/CApplicationComponent">&nbsp;CApplicationComponent</a></li>
<li><a href="/doc/api/1.1/CBehavior">&nbsp;CBehavior</a></li>
<li><a href="/doc/api/1.1/CComponent">&nbsp;CComponent</a></li>
<li><a href="/doc/api/1.1/CEnumerable">&nbsp;CEnumerable</a></li>
<li><a href="/doc/api/1.1/CErrorEvent">&nbsp;CErrorEvent</a></li>
<li><a href="/doc/api/1.1/CErrorHandler">&nbsp;CErrorHandler</a></li>
<li><a href="/doc/api/1.1/CEvent">&nbsp;CEvent</a></li>
<li><a href="/doc/api/1.1/CException">&nbsp;CException</a></li>
<li><a href="/doc/api/1.1/CExceptionEvent">&nbsp;CExceptionEvent</a></li>
<li><a href="/doc/api/1.1/CHttpException">&nbsp;CHttpException</a></li>
<li><a href="/doc/api/1.1/CModel">&nbsp;CModel</a></li>
<li><a href="/doc/api/1.1/CModelBehavior">&nbsp;CModelBehavior</a></li>
<li><a href="/doc/api/1.1/CModelEvent">&nbsp;CModelEvent</a></li>
<li><a href="/doc/api/1.1/CModule">&nbsp;CModule</a></li>
<li class="active">&nbsp;CSecurityManager</li>
<li><a href="/doc/api/1.1/CStatePersister">&nbsp;CStatePersister</a></li>
<li><a href="/doc/api/1.1/IAction">&nbsp;IAction</a></li>
<li><a href="/doc/api/1.1/IApplicationComponent">&nbsp;IApplicationComponent</a></li>
<li><a href="/doc/api/1.1/IAuthManager">&nbsp;IAuthManager</a></li>
<li><a href="/doc/api/1.1/IBehavior">&nbsp;IBehavior</a></li>
<li><a href="/doc/api/1.1/IFilter">&nbsp;IFilter</a></li>
<li><a href="/doc/api/1.1/IStatePersister">&nbsp;IStatePersister</a></li>
<li><a href="/doc/api/1.1/IUserIdentity">&nbsp;IUserIdentity</a></li>
<li><a href="/doc/api/1.1/IViewRenderer">&nbsp;IViewRenderer</a></li>
<li><a href="/doc/api/1.1/IWebServiceProvider">&nbsp;IWebServiceProvider</a></li>
<li><a href="/doc/api/1.1/IWebUser">&nbsp;IWebUser</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.caching</span>
<ul>
<li><a href="/doc/api/1.1/CApcCache">&nbsp;CApcCache</a></li>
<li><a href="/doc/api/1.1/CCache">&nbsp;CCache</a></li>
<li><a href="/doc/api/1.1/CDbCache">&nbsp;CDbCache</a></li>
<li><a href="/doc/api/1.1/CDummyCache">&nbsp;CDummyCache</a></li>
<li><a href="/doc/api/1.1/CEAcceleratorCache">&nbsp;CEAcceleratorCache</a></li>
<li><a href="/doc/api/1.1/CFileCache">&nbsp;CFileCache</a></li>
<li><a href="/doc/api/1.1/CMemCache">&nbsp;CMemCache</a></li>
<li><a href="/doc/api/1.1/CMemCacheServerConfiguration">&nbsp;CMemCacheServerConfiguration</a></li>
<li><a href="/doc/api/1.1/CRedisCache">&nbsp;CRedisCache</a></li>
<li><a href="/doc/api/1.1/CWinCache">&nbsp;CWinCache</a></li>
<li><a href="/doc/api/1.1/CXCache">&nbsp;CXCache</a></li>
<li><a href="/doc/api/1.1/CZendDataCache">&nbsp;CZendDataCache</a></li>
<li><a href="/doc/api/1.1/ICache">&nbsp;ICache</a></li>
<li><a href="/doc/api/1.1/ICacheDependency">&nbsp;ICacheDependency</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.caching.dependencies</span>
<ul>
<li><a href="/doc/api/1.1/CCacheDependency">&nbsp;CCacheDependency</a></li>
<li><a href="/doc/api/1.1/CChainedCacheDependency">&nbsp;CChainedCacheDependency</a></li>
<li><a href="/doc/api/1.1/CDbCacheDependency">&nbsp;CDbCacheDependency</a></li>
<li><a href="/doc/api/1.1/CDirectoryCacheDependency">&nbsp;CDirectoryCacheDependency</a></li>
<li><a href="/doc/api/1.1/CExpressionDependency">&nbsp;CExpressionDependency</a></li>
<li><a href="/doc/api/1.1/CFileCacheDependency">&nbsp;CFileCacheDependency</a></li>
<li><a href="/doc/api/1.1/CGlobalStateCacheDependency">&nbsp;CGlobalStateCacheDependency</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.collections</span>
<ul>
<li><a href="/doc/api/1.1/CAttributeCollection">&nbsp;CAttributeCollection</a></li>
<li><a href="/doc/api/1.1/CConfiguration">&nbsp;CConfiguration</a></li>
<li><a href="/doc/api/1.1/CList">&nbsp;CList</a></li>
<li><a href="/doc/api/1.1/CListIterator">&nbsp;CListIterator</a></li>
<li><a href="/doc/api/1.1/CMap">&nbsp;CMap</a></li>
<li><a href="/doc/api/1.1/CMapIterator">&nbsp;CMapIterator</a></li>
<li><a href="/doc/api/1.1/CQueue">&nbsp;CQueue</a></li>
<li><a href="/doc/api/1.1/CQueueIterator">&nbsp;CQueueIterator</a></li>
<li><a href="/doc/api/1.1/CStack">&nbsp;CStack</a></li>
<li><a href="/doc/api/1.1/CStackIterator">&nbsp;CStackIterator</a></li>
<li><a href="/doc/api/1.1/CTypedList">&nbsp;CTypedList</a></li>
<li><a href="/doc/api/1.1/CTypedMap">&nbsp;CTypedMap</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.console</span>
<ul>
<li><a href="/doc/api/1.1/CConsoleApplication">&nbsp;CConsoleApplication</a></li>
<li><a href="/doc/api/1.1/CConsoleCommand">&nbsp;CConsoleCommand</a></li>
<li><a href="/doc/api/1.1/CConsoleCommandBehavior">&nbsp;CConsoleCommandBehavior</a></li>
<li><a href="/doc/api/1.1/CConsoleCommandEvent">&nbsp;CConsoleCommandEvent</a></li>
<li><a href="/doc/api/1.1/CConsoleCommandRunner">&nbsp;CConsoleCommandRunner</a></li>
<li><a href="/doc/api/1.1/CHelpCommand">&nbsp;CHelpCommand</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db</span>
<ul>
<li><a href="/doc/api/1.1/CDbCommand">&nbsp;CDbCommand</a></li>
<li><a href="/doc/api/1.1/CDbConnection">&nbsp;CDbConnection</a></li>
<li><a href="/doc/api/1.1/CDbDataReader">&nbsp;CDbDataReader</a></li>
<li><a href="/doc/api/1.1/CDbException">&nbsp;CDbException</a></li>
<li><a href="/doc/api/1.1/CDbMigration">&nbsp;CDbMigration</a></li>
<li><a href="/doc/api/1.1/CDbTransaction">&nbsp;CDbTransaction</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.ar</span>
<ul>
<li><a href="/doc/api/1.1/CActiveFinder">&nbsp;CActiveFinder</a></li>
<li><a href="/doc/api/1.1/CActiveRecord">&nbsp;CActiveRecord</a></li>
<li><a href="/doc/api/1.1/CActiveRecordBehavior">&nbsp;CActiveRecordBehavior</a></li>
<li><a href="/doc/api/1.1/CActiveRecordMetaData">&nbsp;CActiveRecordMetaData</a></li>
<li><a href="/doc/api/1.1/CActiveRelation">&nbsp;CActiveRelation</a></li>
<li><a href="/doc/api/1.1/CBaseActiveRelation">&nbsp;CBaseActiveRelation</a></li>
<li><a href="/doc/api/1.1/CBelongsToRelation">&nbsp;CBelongsToRelation</a></li>
<li><a href="/doc/api/1.1/CHasManyRelation">&nbsp;CHasManyRelation</a></li>
<li><a href="/doc/api/1.1/CHasOneRelation">&nbsp;CHasOneRelation</a></li>
<li><a href="/doc/api/1.1/CJoinElement">&nbsp;CJoinElement</a></li>
<li><a href="/doc/api/1.1/CJoinQuery">&nbsp;CJoinQuery</a></li>
<li><a href="/doc/api/1.1/CManyManyRelation">&nbsp;CManyManyRelation</a></li>
<li><a href="/doc/api/1.1/CStatElement">&nbsp;CStatElement</a></li>
<li><a href="/doc/api/1.1/CStatRelation">&nbsp;CStatRelation</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema</span>
<ul>
<li><a href="/doc/api/1.1/CDbColumnSchema">&nbsp;CDbColumnSchema</a></li>
<li><a href="/doc/api/1.1/CDbCommandBuilder">&nbsp;CDbCommandBuilder</a></li>
<li><a href="/doc/api/1.1/CDbCriteria">&nbsp;CDbCriteria</a></li>
<li><a href="/doc/api/1.1/CDbExpression">&nbsp;CDbExpression</a></li>
<li><a href="/doc/api/1.1/CDbSchema">&nbsp;CDbSchema</a></li>
<li><a href="/doc/api/1.1/CDbTableSchema">&nbsp;CDbTableSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema.cubrid</span>
<ul>
<li><a href="/doc/api/1.1/CCubridColumnSchema">&nbsp;CCubridColumnSchema</a></li>
<li><a href="/doc/api/1.1/CCubridSchema">&nbsp;CCubridSchema</a></li>
<li><a href="/doc/api/1.1/CCubridTableSchema">&nbsp;CCubridTableSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema.mssql</span>
<ul>
<li><a href="/doc/api/1.1/CMssqlColumnSchema">&nbsp;CMssqlColumnSchema</a></li>
<li><a href="/doc/api/1.1/CMssqlCommandBuilder">&nbsp;CMssqlCommandBuilder</a></li>
<li><a href="/doc/api/1.1/CMssqlPdoAdapter">&nbsp;CMssqlPdoAdapter</a></li>
<li><a href="/doc/api/1.1/CMssqlSchema">&nbsp;CMssqlSchema</a></li>
<li><a href="/doc/api/1.1/CMssqlSqlsrvPdoAdapter">&nbsp;CMssqlSqlsrvPdoAdapter</a></li>
<li><a href="/doc/api/1.1/CMssqlTableSchema">&nbsp;CMssqlTableSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema.mysql</span>
<ul>
<li><a href="/doc/api/1.1/CMysqlColumnSchema">&nbsp;CMysqlColumnSchema</a></li>
<li><a href="/doc/api/1.1/CMysqlCommandBuilder">&nbsp;CMysqlCommandBuilder</a></li>
<li><a href="/doc/api/1.1/CMysqlSchema">&nbsp;CMysqlSchema</a></li>
<li><a href="/doc/api/1.1/CMysqlTableSchema">&nbsp;CMysqlTableSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema.oci</span>
<ul>
<li><a href="/doc/api/1.1/COciColumnSchema">&nbsp;COciColumnSchema</a></li>
<li><a href="/doc/api/1.1/COciCommandBuilder">&nbsp;COciCommandBuilder</a></li>
<li><a href="/doc/api/1.1/COciSchema">&nbsp;COciSchema</a></li>
<li><a href="/doc/api/1.1/COciTableSchema">&nbsp;COciTableSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema.pgsql</span>
<ul>
<li><a href="/doc/api/1.1/CPgsqlColumnSchema">&nbsp;CPgsqlColumnSchema</a></li>
<li><a href="/doc/api/1.1/CPgsqlCommandBuilder">&nbsp;CPgsqlCommandBuilder</a></li>
<li><a href="/doc/api/1.1/CPgsqlSchema">&nbsp;CPgsqlSchema</a></li>
<li><a href="/doc/api/1.1/CPgsqlTableSchema">&nbsp;CPgsqlTableSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.db.schema.sqlite</span>
<ul>
<li><a href="/doc/api/1.1/CSqliteColumnSchema">&nbsp;CSqliteColumnSchema</a></li>
<li><a href="/doc/api/1.1/CSqliteCommandBuilder">&nbsp;CSqliteCommandBuilder</a></li>
<li><a href="/doc/api/1.1/CSqliteSchema">&nbsp;CSqliteSchema</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.gii</span>
<ul>
<li><a href="/doc/api/1.1/CCodeFile">&nbsp;CCodeFile</a></li>
<li><a href="/doc/api/1.1/CCodeForm">&nbsp;CCodeForm</a></li>
<li><a href="/doc/api/1.1/CCodeGenerator">&nbsp;CCodeGenerator</a></li>
<li><a href="/doc/api/1.1/CCodeModel">&nbsp;CCodeModel</a></li>
<li><a href="/doc/api/1.1/GiiModule">&nbsp;GiiModule</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.i18n</span>
<ul>
<li><a href="/doc/api/1.1/CChoiceFormat">&nbsp;CChoiceFormat</a></li>
<li><a href="/doc/api/1.1/CDateFormatter">&nbsp;CDateFormatter</a></li>
<li><a href="/doc/api/1.1/CDbMessageSource">&nbsp;CDbMessageSource</a></li>
<li><a href="/doc/api/1.1/CGettextMessageSource">&nbsp;CGettextMessageSource</a></li>
<li><a href="/doc/api/1.1/CLocale">&nbsp;CLocale</a></li>
<li><a href="/doc/api/1.1/CMessageSource">&nbsp;CMessageSource</a></li>
<li><a href="/doc/api/1.1/CMissingTranslationEvent">&nbsp;CMissingTranslationEvent</a></li>
<li><a href="/doc/api/1.1/CNumberFormatter">&nbsp;CNumberFormatter</a></li>
<li><a href="/doc/api/1.1/CPhpMessageSource">&nbsp;CPhpMessageSource</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.i18n.gettext</span>
<ul>
<li><a href="/doc/api/1.1/CGettextFile">&nbsp;CGettextFile</a></li>
<li><a href="/doc/api/1.1/CGettextMoFile">&nbsp;CGettextMoFile</a></li>
<li><a href="/doc/api/1.1/CGettextPoFile">&nbsp;CGettextPoFile</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.logging</span>
<ul>
<li><a href="/doc/api/1.1/CChainedLogFilter">&nbsp;CChainedLogFilter</a></li>
<li><a href="/doc/api/1.1/CDbLogRoute">&nbsp;CDbLogRoute</a></li>
<li><a href="/doc/api/1.1/CEmailLogRoute">&nbsp;CEmailLogRoute</a></li>
<li><a href="/doc/api/1.1/CFileLogRoute">&nbsp;CFileLogRoute</a></li>
<li><a href="/doc/api/1.1/CLogFilter">&nbsp;CLogFilter</a></li>
<li><a href="/doc/api/1.1/CLogRoute">&nbsp;CLogRoute</a></li>
<li><a href="/doc/api/1.1/CLogRouter">&nbsp;CLogRouter</a></li>
<li><a href="/doc/api/1.1/CLogger">&nbsp;CLogger</a></li>
<li><a href="/doc/api/1.1/CProfileLogRoute">&nbsp;CProfileLogRoute</a></li>
<li><a href="/doc/api/1.1/CSysLogRoute">&nbsp;CSysLogRoute</a></li>
<li><a href="/doc/api/1.1/CWebLogRoute">&nbsp;CWebLogRoute</a></li>
<li><a href="/doc/api/1.1/ILogFilter">&nbsp;ILogFilter</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.test</span>
<ul>
<li><a href="/doc/api/1.1/CDbFixtureManager">&nbsp;CDbFixtureManager</a></li>
<li><a href="/doc/api/1.1/CDbTestCase">&nbsp;CDbTestCase</a></li>
<li><a href="/doc/api/1.1/CTestCase">&nbsp;CTestCase</a></li>
<li><a href="/doc/api/1.1/CWebTestCase">&nbsp;CWebTestCase</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.utils</span>
<ul>
<li><a href="/doc/api/1.1/CDateTimeParser">&nbsp;CDateTimeParser</a></li>
<li><a href="/doc/api/1.1/CFileHelper">&nbsp;CFileHelper</a></li>
<li><a href="/doc/api/1.1/CFormatter">&nbsp;CFormatter</a></li>
<li><a href="/doc/api/1.1/CLocalizedFormatter">&nbsp;CLocalizedFormatter</a></li>
<li><a href="/doc/api/1.1/CMarkdownParser">&nbsp;CMarkdownParser</a></li>
<li><a href="/doc/api/1.1/CPasswordHelper">&nbsp;CPasswordHelper</a></li>
<li><a href="/doc/api/1.1/CPropertyValue">&nbsp;CPropertyValue</a></li>
<li><a href="/doc/api/1.1/CTimestamp">&nbsp;CTimestamp</a></li>
<li><a href="/doc/api/1.1/CVarDumper">&nbsp;CVarDumper</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.validators</span>
<ul>
<li><a href="/doc/api/1.1/CBooleanValidator">&nbsp;CBooleanValidator</a></li>
<li><a href="/doc/api/1.1/CCaptchaValidator">&nbsp;CCaptchaValidator</a></li>
<li><a href="/doc/api/1.1/CCompareValidator">&nbsp;CCompareValidator</a></li>
<li><a href="/doc/api/1.1/CDateValidator">&nbsp;CDateValidator</a></li>
<li><a href="/doc/api/1.1/CDefaultValueValidator">&nbsp;CDefaultValueValidator</a></li>
<li><a href="/doc/api/1.1/CEmailValidator">&nbsp;CEmailValidator</a></li>
<li><a href="/doc/api/1.1/CExistValidator">&nbsp;CExistValidator</a></li>
<li><a href="/doc/api/1.1/CFileValidator">&nbsp;CFileValidator</a></li>
<li><a href="/doc/api/1.1/CFilterValidator">&nbsp;CFilterValidator</a></li>
<li><a href="/doc/api/1.1/CInlineValidator">&nbsp;CInlineValidator</a></li>
<li><a href="/doc/api/1.1/CNumberValidator">&nbsp;CNumberValidator</a></li>
<li><a href="/doc/api/1.1/CRangeValidator">&nbsp;CRangeValidator</a></li>
<li><a href="/doc/api/1.1/CRegularExpressionValidator">&nbsp;CRegularExpressionValidator</a></li>
<li><a href="/doc/api/1.1/CRequiredValidator">&nbsp;CRequiredValidator</a></li>
<li><a href="/doc/api/1.1/CSafeValidator">&nbsp;CSafeValidator</a></li>
<li><a href="/doc/api/1.1/CStringValidator">&nbsp;CStringValidator</a></li>
<li><a href="/doc/api/1.1/CTypeValidator">&nbsp;CTypeValidator</a></li>
<li><a href="/doc/api/1.1/CUniqueValidator">&nbsp;CUniqueValidator</a></li>
<li><a href="/doc/api/1.1/CUnsafeValidator">&nbsp;CUnsafeValidator</a></li>
<li><a href="/doc/api/1.1/CUrlValidator">&nbsp;CUrlValidator</a></li>
<li><a href="/doc/api/1.1/CValidator">&nbsp;CValidator</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web</span>
<ul>
<li><a href="/doc/api/1.1/CActiveDataProvider">&nbsp;CActiveDataProvider</a></li>
<li><a href="/doc/api/1.1/CArrayDataProvider">&nbsp;CArrayDataProvider</a></li>
<li><a href="/doc/api/1.1/CAssetManager">&nbsp;CAssetManager</a></li>
<li><a href="/doc/api/1.1/CBaseController">&nbsp;CBaseController</a></li>
<li><a href="/doc/api/1.1/CBaseUrlRule">&nbsp;CBaseUrlRule</a></li>
<li><a href="/doc/api/1.1/CCacheHttpSession">&nbsp;CCacheHttpSession</a></li>
<li><a href="/doc/api/1.1/CClientScript">&nbsp;CClientScript</a></li>
<li><a href="/doc/api/1.1/CController">&nbsp;CController</a></li>
<li><a href="/doc/api/1.1/CCookieCollection">&nbsp;CCookieCollection</a></li>
<li><a href="/doc/api/1.1/CDataProvider">&nbsp;CDataProvider</a></li>
<li><a href="/doc/api/1.1/CDataProviderIterator">&nbsp;CDataProviderIterator</a></li>
<li><a href="/doc/api/1.1/CDbHttpSession">&nbsp;CDbHttpSession</a></li>
<li><a href="/doc/api/1.1/CExtController">&nbsp;CExtController</a></li>
<li><a href="/doc/api/1.1/CFormModel">&nbsp;CFormModel</a></li>
<li><a href="/doc/api/1.1/CHttpCookie">&nbsp;CHttpCookie</a></li>
<li><a href="/doc/api/1.1/CHttpRequest">&nbsp;CHttpRequest</a></li>
<li><a href="/doc/api/1.1/CHttpSession">&nbsp;CHttpSession</a></li>
<li><a href="/doc/api/1.1/CHttpSessionIterator">&nbsp;CHttpSessionIterator</a></li>
<li><a href="/doc/api/1.1/COutputEvent">&nbsp;COutputEvent</a></li>
<li><a href="/doc/api/1.1/CPagination">&nbsp;CPagination</a></li>
<li><a href="/doc/api/1.1/CSort">&nbsp;CSort</a></li>
<li><a href="/doc/api/1.1/CSqlDataProvider">&nbsp;CSqlDataProvider</a></li>
<li><a href="/doc/api/1.1/CTheme">&nbsp;CTheme</a></li>
<li><a href="/doc/api/1.1/CThemeManager">&nbsp;CThemeManager</a></li>
<li><a href="/doc/api/1.1/CUploadedFile">&nbsp;CUploadedFile</a></li>
<li><a href="/doc/api/1.1/CUrlManager">&nbsp;CUrlManager</a></li>
<li><a href="/doc/api/1.1/CUrlRule">&nbsp;CUrlRule</a></li>
<li><a href="/doc/api/1.1/CWebApplication">&nbsp;CWebApplication</a></li>
<li><a href="/doc/api/1.1/CWebModule">&nbsp;CWebModule</a></li>
<li><a href="/doc/api/1.1/CWidgetFactory">&nbsp;CWidgetFactory</a></li>
<li><a href="/doc/api/1.1/IDataProvider">&nbsp;IDataProvider</a></li>
<li><a href="/doc/api/1.1/IWidgetFactory">&nbsp;IWidgetFactory</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.actions</span>
<ul>
<li><a href="/doc/api/1.1/CAction">&nbsp;CAction</a></li>
<li><a href="/doc/api/1.1/CInlineAction">&nbsp;CInlineAction</a></li>
<li><a href="/doc/api/1.1/CViewAction">&nbsp;CViewAction</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.auth</span>
<ul>
<li><a href="/doc/api/1.1/CAccessControlFilter">&nbsp;CAccessControlFilter</a></li>
<li><a href="/doc/api/1.1/CAccessRule">&nbsp;CAccessRule</a></li>
<li><a href="/doc/api/1.1/CAuthAssignment">&nbsp;CAuthAssignment</a></li>
<li><a href="/doc/api/1.1/CAuthItem">&nbsp;CAuthItem</a></li>
<li><a href="/doc/api/1.1/CAuthManager">&nbsp;CAuthManager</a></li>
<li><a href="/doc/api/1.1/CBaseUserIdentity">&nbsp;CBaseUserIdentity</a></li>
<li><a href="/doc/api/1.1/CDbAuthManager">&nbsp;CDbAuthManager</a></li>
<li><a href="/doc/api/1.1/CPhpAuthManager">&nbsp;CPhpAuthManager</a></li>
<li><a href="/doc/api/1.1/CUserIdentity">&nbsp;CUserIdentity</a></li>
<li><a href="/doc/api/1.1/CWebUser">&nbsp;CWebUser</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.filters</span>
<ul>
<li><a href="/doc/api/1.1/CFilter">&nbsp;CFilter</a></li>
<li><a href="/doc/api/1.1/CFilterChain">&nbsp;CFilterChain</a></li>
<li><a href="/doc/api/1.1/CHttpCacheFilter">&nbsp;CHttpCacheFilter</a></li>
<li><a href="/doc/api/1.1/CInlineFilter">&nbsp;CInlineFilter</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.form</span>
<ul>
<li><a href="/doc/api/1.1/CForm">&nbsp;CForm</a></li>
<li><a href="/doc/api/1.1/CFormButtonElement">&nbsp;CFormButtonElement</a></li>
<li><a href="/doc/api/1.1/CFormElement">&nbsp;CFormElement</a></li>
<li><a href="/doc/api/1.1/CFormElementCollection">&nbsp;CFormElementCollection</a></li>
<li><a href="/doc/api/1.1/CFormInputElement">&nbsp;CFormInputElement</a></li>
<li><a href="/doc/api/1.1/CFormStringElement">&nbsp;CFormStringElement</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.helpers</span>
<ul>
<li><a href="/doc/api/1.1/CGoogleApi">&nbsp;CGoogleApi</a></li>
<li><a href="/doc/api/1.1/CHtml">&nbsp;CHtml</a></li>
<li><a href="/doc/api/1.1/CJSON">&nbsp;CJSON</a></li>
<li><a href="/doc/api/1.1/CJavaScript">&nbsp;CJavaScript</a></li>
<li><a href="/doc/api/1.1/CJavaScriptExpression">&nbsp;CJavaScriptExpression</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.renderers</span>
<ul>
<li><a href="/doc/api/1.1/CPradoViewRenderer">&nbsp;CPradoViewRenderer</a></li>
<li><a href="/doc/api/1.1/CViewRenderer">&nbsp;CViewRenderer</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.services</span>
<ul>
<li><a href="/doc/api/1.1/CDocumentSoapObjectWrapper">&nbsp;CDocumentSoapObjectWrapper</a></li>
<li><a href="/doc/api/1.1/CSoapObjectWrapper">&nbsp;CSoapObjectWrapper</a></li>
<li><a href="/doc/api/1.1/CWebService">&nbsp;CWebService</a></li>
<li><a href="/doc/api/1.1/CWebServiceAction">&nbsp;CWebServiceAction</a></li>
<li><a href="/doc/api/1.1/CWsdlGenerator">&nbsp;CWsdlGenerator</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.widgets</span>
<ul>
<li><a href="/doc/api/1.1/CActiveForm">&nbsp;CActiveForm</a></li>
<li><a href="/doc/api/1.1/CAutoComplete">&nbsp;CAutoComplete</a></li>
<li><a href="/doc/api/1.1/CClipWidget">&nbsp;CClipWidget</a></li>
<li><a href="/doc/api/1.1/CContentDecorator">&nbsp;CContentDecorator</a></li>
<li><a href="/doc/api/1.1/CFilterWidget">&nbsp;CFilterWidget</a></li>
<li><a href="/doc/api/1.1/CFlexWidget">&nbsp;CFlexWidget</a></li>
<li><a href="/doc/api/1.1/CHtmlPurifier">&nbsp;CHtmlPurifier</a></li>
<li><a href="/doc/api/1.1/CInputWidget">&nbsp;CInputWidget</a></li>
<li><a href="/doc/api/1.1/CMarkdown">&nbsp;CMarkdown</a></li>
<li><a href="/doc/api/1.1/CMaskedTextField">&nbsp;CMaskedTextField</a></li>
<li><a href="/doc/api/1.1/CMultiFileUpload">&nbsp;CMultiFileUpload</a></li>
<li><a href="/doc/api/1.1/COutputCache">&nbsp;COutputCache</a></li>
<li><a href="/doc/api/1.1/COutputProcessor">&nbsp;COutputProcessor</a></li>
<li><a href="/doc/api/1.1/CStarRating">&nbsp;CStarRating</a></li>
<li><a href="/doc/api/1.1/CTabView">&nbsp;CTabView</a></li>
<li><a href="/doc/api/1.1/CTextHighlighter">&nbsp;CTextHighlighter</a></li>
<li><a href="/doc/api/1.1/CTreeView">&nbsp;CTreeView</a></li>
<li><a href="/doc/api/1.1/CWidget">&nbsp;CWidget</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.widgets.captcha</span>
<ul>
<li><a href="/doc/api/1.1/CCaptcha">&nbsp;CCaptcha</a></li>
<li><a href="/doc/api/1.1/CCaptchaAction">&nbsp;CCaptchaAction</a></li>
</ul>
</li>
<li class="closed"><span class="folder">system.web.widgets.pagers</span>
<ul>
<li><a href="/doc/api/1.1/CBasePager">&nbsp;CBasePager</a></li>
<li><a href="/doc/api/1.1/CLinkPager">&nbsp;CLinkPager</a></li>
<li><a href="/doc/api/1.1/CListPager">&nbsp;CListPager</a></li>
</ul>
</li>
<li class="closed"><span class="folder">zii.behaviors</span>
<ul>
<li><a href="/doc/api/1.1/CTimestampBehavior">&nbsp;CTimestampBehavior</a></li>
</ul>
</li>
<li class="closed"><span class="folder">zii.widgets</span>
<ul>
<li><a href="/doc/api/1.1/CBaseListView">&nbsp;CBaseListView</a></li>
<li><a href="/doc/api/1.1/CBreadcrumbs">&nbsp;CBreadcrumbs</a></li>
<li><a href="/doc/api/1.1/CDetailView">&nbsp;CDetailView</a></li>
<li><a href="/doc/api/1.1/CListView">&nbsp;CListView</a></li>
<li><a href="/doc/api/1.1/CMenu">&nbsp;CMenu</a></li>
<li><a href="/doc/api/1.1/CPortlet">&nbsp;CPortlet</a></li>
</ul>
</li>
<li class="closed"><span class="folder">zii.widgets.grid</span>
<ul>
<li><a href="/doc/api/1.1/CButtonColumn">&nbsp;CButtonColumn</a></li>
<li><a href="/doc/api/1.1/CCheckBoxColumn">&nbsp;CCheckBoxColumn</a></li>
<li><a href="/doc/api/1.1/CDataColumn">&nbsp;CDataColumn</a></li>
<li><a href="/doc/api/1.1/CGridColumn">&nbsp;CGridColumn</a></li>
<li><a href="/doc/api/1.1/CGridView">&nbsp;CGridView</a></li>
<li><a href="/doc/api/1.1/CLinkColumn">&nbsp;CLinkColumn</a></li>
</ul>
</li>
<li class="closed"><span class="folder">zii.widgets.jui</span>
<ul>
<li><a href="/doc/api/1.1/CJuiAccordion">&nbsp;CJuiAccordion</a></li>
<li><a href="/doc/api/1.1/CJuiAutoComplete">&nbsp;CJuiAutoComplete</a></li>
<li><a href="/doc/api/1.1/CJuiButton">&nbsp;CJuiButton</a></li>
<li><a href="/doc/api/1.1/CJuiDatePicker">&nbsp;CJuiDatePicker</a></li>
<li><a href="/doc/api/1.1/CJuiDialog">&nbsp;CJuiDialog</a></li>
<li><a href="/doc/api/1.1/CJuiDraggable">&nbsp;CJuiDraggable</a></li>
<li><a href="/doc/api/1.1/CJuiDroppable">&nbsp;CJuiDroppable</a></li>
<li><a href="/doc/api/1.1/CJuiInputWidget">&nbsp;CJuiInputWidget</a></li>
<li><a href="/doc/api/1.1/CJuiProgressBar">&nbsp;CJuiProgressBar</a></li>
<li><a href="/doc/api/1.1/CJuiResizable">&nbsp;CJuiResizable</a></li>
<li><a href="/doc/api/1.1/CJuiSelectable">&nbsp;CJuiSelectable</a></li>
<li><a href="/doc/api/1.1/CJuiSlider">&nbsp;CJuiSlider</a></li>
<li><a href="/doc/api/1.1/CJuiSliderInput">&nbsp;CJuiSliderInput</a></li>
<li><a href="/doc/api/1.1/CJuiSortable">&nbsp;CJuiSortable</a></li>
<li><a href="/doc/api/1.1/CJuiTabs">&nbsp;CJuiTabs</a></li>
<li><a href="/doc/api/1.1/CJuiWidget">&nbsp;CJuiWidget</a></li>
</ul>
</li>
</ul>	<div class="google-ad2" style="margin: 20px 0 0 40px; display: none;">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-3732587985864947";
google_ad_slot = "4362140756";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
    </div>
    <div class="grid_9 content omega">

    	<div class="api-suggest clearfix">
	<strong>Look up a class, method, property or event</strong>
	<input class="keyword g-text" id="keyword" type="text" value="" name="keyword" />    <input type="submit" value="Go" class="btn btn-info submit-button" /></div>

    	<h1>CSecurityManager</h1>
<div id="nav">
<a href="/doc/api/1.1/">All Packages</a>
| <a href="#properties">Properties</a>
| <a href="#methods">Methods</a>
</div>

<table class="summaryTable docClass">
<colgroup>
	<col class="col-name" />
	<col class="col-value" />
</colgroup>
<tr>
  <th>Package</th>
  <td><a href="/doc/api/1.1/#system.base">system.base</a></td>
</tr>
<tr>
  <th>Inheritance</th>
  <td>class CSecurityManager &raquo;
<a href="/doc/api/1.1/CApplicationComponent">CApplicationComponent</a> &raquo;
<a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr>
  <th>Implements</th>
  <td><a href="/doc/api/1.1/IApplicationComponent">IApplicationComponent</a></td>
</tr>
<tr>
  <th>Since</th>
  <td>1.0</td>
</tr>
<tr>
  <th>Source Code</th>
  <td><a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php">framework/base/CSecurityManager.php</a></td>
</tr>
</table>

<div class="google-ad" style="position: absolute; top: 250px;">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-3732587985864947";
google_ad_slot = "6988439380";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div><div id="classDescription">
CSecurityManager provides private keys, hashing and encryption functions.
<br/><br/>
CSecurityManager is used by Yii components and applications for security-related purpose.
For example, it is used in cookie validation feature to prevent cookie data
from being tampered.
<br/><br/>
CSecurityManager is mainly used to protect data from being tampered and viewed.
It can generate HMAC and encrypt the data. The private key used to generate HMAC
is set by <a href="/doc/api/1.1/CSecurityManager#setValidationKey">ValidationKey</a>. The key used to encrypt data is
specified by <a href="/doc/api/1.1/CSecurityManager#setEncryptionKey">EncryptionKey</a>. If the above keys are not
explicitly set, random keys will be generated and used.
<br/><br/>
To protected data with HMAC, call <a href="/doc/api/1.1/CSecurityManager#hashData">hashData()</a>; and to check if the data
is tampered, call <a href="/doc/api/1.1/CSecurityManager#validateData">validateData()</a>, which will return the real data if
it is not tampered. The algorithm used to generated HMAC is specified by
<a href="/doc/api/1.1/CSecurityManager#validation">validation</a>.
<br/><br/>
To encrypt and decrypt data, call <a href="/doc/api/1.1/CSecurityManager#encrypt">encrypt()</a> and <a href="/doc/api/1.1/CSecurityManager#decrypt">decrypt()</a>
respectively, which uses 3DES encryption algorithm.  Note, the PHP Mcrypt
extension must be installed and loaded.
<br/><br/>
CSecurityManager is a core application component that can be accessed via
<a href="/doc/api/1.1/CApplication#getSecurityManager">CApplication::getSecurityManager()</a>.</div>
<a name="properties"></a>

<div class="summary docProperty">
<h2>Public Properties</h2>

<p><a href="#" class="toggle">Hide inherited properties</a></p>

<table class="summaryTable">
<colgroup>
	<col class="col-property" />
	<col class="col-type" />
	<col class="col-description" />
	<col class="col-defined" />
</colgroup>
<tr>
  <th>Property</th><th>Type</th><th>Description</th><th>Defined By</th>
</tr>
<tr class="inherited" id="behaviors">
  <td><a href="/doc/api/1.1/CApplicationComponent#behaviors-detail">behaviors</a></td>
  <td>array</td>
  <td>the behaviors that should be attached to this component.</td>
  <td><a href="/doc/api/1.1/CApplicationComponent">CApplicationComponent</a></td>
</tr>
<tr id="cryptAlgorithm">
  <td><a href="/doc/api/1.1/CSecurityManager#cryptAlgorithm-detail">cryptAlgorithm</a></td>
  <td>mixed</td>
  <td>the name of the crypt algorithm to be used by <a href="/doc/api/1.1/CSecurityManager#encrypt">encrypt</a> and <a href="/doc/api/1.1/CSecurityManager#decrypt">decrypt</a>.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="encryptionKey">
  <td><a href="/doc/api/1.1/CSecurityManager#encryptionKey-detail">encryptionKey</a></td>
  <td>string</td>
  <td>the private key used to encrypt/decrypt data.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="hashAlgorithm">
  <td><a href="/doc/api/1.1/CSecurityManager#hashAlgorithm-detail">hashAlgorithm</a></td>
  <td>string</td>
  <td>the name of the hashing algorithm to be used by <a href="/doc/api/1.1/CSecurityManager#computeHMAC">computeHMAC</a>.</td>
  <td>CSecurityManager</td>
</tr>
<tr class="inherited" id="isInitialized">
  <td><a href="/doc/api/1.1/CApplicationComponent#isInitialized-detail">isInitialized</a></td>
  <td>boolean</td>
  <td>Checks if this application component has been initialized.</td>
  <td><a href="/doc/api/1.1/CApplicationComponent">CApplicationComponent</a></td>
</tr>
<tr id="validateEncryptionKey">
  <td><a href="/doc/api/1.1/CSecurityManager#validateEncryptionKey-detail">validateEncryptionKey</a></td>
  <td>boolean</td>
  <td>if encryption key should be validated</td>
  <td>CSecurityManager</td>
</tr>
<tr id="validation">
  <td><a href="/doc/api/1.1/CSecurityManager#validation-detail">validation</a></td>
  <td>string</td>
  <td>This method has been deprecated since version 1.1.3.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="validationKey">
  <td><a href="/doc/api/1.1/CSecurityManager#validationKey-detail">validationKey</a></td>
  <td>string</td>
  <td>the private key used to generate HMAC.</td>
  <td>CSecurityManager</td>
</tr>
</table>
</div>
<div class="summary docProperty">
<h2>Protected Properties</h2>

<p><a href="#" class="toggle">Hide inherited properties</a></p>

<table class="summaryTable">
<colgroup>
	<col class="col-property" />
	<col class="col-type" />
	<col class="col-description" />
	<col class="col-defined" />
</colgroup>
<tr>
  <th>Property</th><th>Type</th><th>Description</th><th>Defined By</th>
</tr>
<tr id="encryptionKeyMinimumLengths">
  <td><a href="/doc/api/1.1/CSecurityManager#encryptionKeyMinimumLengths-detail">encryptionKeyMinimumLengths</a></td>
  <td>array</td>
  <td>known minimum lengths per encryption algorithm</td>
  <td>CSecurityManager</td>
</tr>
</table>
</div>
<a name="methods"></a>

<div class="summary docMethod">
<h2>Public Methods</h2>

<p><a href="#" class="toggle">Hide inherited methods</a></p>

<table class="summaryTable">
<colgroup>
	<col class="col-method" />
	<col class="col-description" />
	<col class="col-defined" />
</colgroup>
<tr>
  <th>Method</th><th>Description</th><th>Defined By</th>
</tr>
<tr class="inherited" id="__call">
  <td><a href="/doc/api/1.1/CComponent#__call-detail">__call()</a></td>
  <td>Calls the named method which is not a class method.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="__get">
  <td><a href="/doc/api/1.1/CComponent#__get-detail">__get()</a></td>
  <td>Returns a property value, an event handler list or a behavior based on its name.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="__isset">
  <td><a href="/doc/api/1.1/CComponent#__isset-detail">__isset()</a></td>
  <td>Checks if a property value is null.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="__set">
  <td><a href="/doc/api/1.1/CComponent#__set-detail">__set()</a></td>
  <td>Sets value of a component property.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="__unset">
  <td><a href="/doc/api/1.1/CComponent#__unset-detail">__unset()</a></td>
  <td>Sets a component property to be null.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="asa">
  <td><a href="/doc/api/1.1/CComponent#asa-detail">asa()</a></td>
  <td>Returns the named behavior object.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="attachBehavior">
  <td><a href="/doc/api/1.1/CComponent#attachBehavior-detail">attachBehavior()</a></td>
  <td>Attaches a behavior to this component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="attachBehaviors">
  <td><a href="/doc/api/1.1/CComponent#attachBehaviors-detail">attachBehaviors()</a></td>
  <td>Attaches a list of behaviors to the component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="attachEventHandler">
  <td><a href="/doc/api/1.1/CComponent#attachEventHandler-detail">attachEventHandler()</a></td>
  <td>Attaches an event handler to an event.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="canGetProperty">
  <td><a href="/doc/api/1.1/CComponent#canGetProperty-detail">canGetProperty()</a></td>
  <td>Determines whether a property can be read.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="canSetProperty">
  <td><a href="/doc/api/1.1/CComponent#canSetProperty-detail">canSetProperty()</a></td>
  <td>Determines whether a property can be set.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr id="compareString">
  <td><a href="/doc/api/1.1/CSecurityManager#compareString-detail">compareString()</a></td>
  <td>Performs string comparison using timing attack resistant approach.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="computeHMAC">
  <td><a href="/doc/api/1.1/CSecurityManager#computeHMAC-detail">computeHMAC()</a></td>
  <td>Computes the HMAC for the data with <a href="/doc/api/1.1/CSecurityManager#getValidationKey">validationKey</a>. This method has been made public</td>
  <td>CSecurityManager</td>
</tr>
<tr id="decrypt">
  <td><a href="/doc/api/1.1/CSecurityManager#decrypt-detail">decrypt()</a></td>
  <td>Decrypts data</td>
  <td>CSecurityManager</td>
</tr>
<tr class="inherited" id="detachBehavior">
  <td><a href="/doc/api/1.1/CComponent#detachBehavior-detail">detachBehavior()</a></td>
  <td>Detaches a behavior from the component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="detachBehaviors">
  <td><a href="/doc/api/1.1/CComponent#detachBehaviors-detail">detachBehaviors()</a></td>
  <td>Detaches all behaviors from the component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="detachEventHandler">
  <td><a href="/doc/api/1.1/CComponent#detachEventHandler-detail">detachEventHandler()</a></td>
  <td>Detaches an existing event handler.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="disableBehavior">
  <td><a href="/doc/api/1.1/CComponent#disableBehavior-detail">disableBehavior()</a></td>
  <td>Disables an attached behavior.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="disableBehaviors">
  <td><a href="/doc/api/1.1/CComponent#disableBehaviors-detail">disableBehaviors()</a></td>
  <td>Disables all behaviors attached to this component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="enableBehavior">
  <td><a href="/doc/api/1.1/CComponent#enableBehavior-detail">enableBehavior()</a></td>
  <td>Enables an attached behavior.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="enableBehaviors">
  <td><a href="/doc/api/1.1/CComponent#enableBehaviors-detail">enableBehaviors()</a></td>
  <td>Enables all behaviors attached to this component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr id="encrypt">
  <td><a href="/doc/api/1.1/CSecurityManager#encrypt-detail">encrypt()</a></td>
  <td>Encrypts data.</td>
  <td>CSecurityManager</td>
</tr>
<tr class="inherited" id="evaluateExpression">
  <td><a href="/doc/api/1.1/CComponent#evaluateExpression-detail">evaluateExpression()</a></td>
  <td>Evaluates a PHP expression or callback under the context of this component.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr id="generatePseudoRandomBlock">
  <td><a href="/doc/api/1.1/CSecurityManager#generatePseudoRandomBlock-detail">generatePseudoRandomBlock()</a></td>
  <td>Generate a pseudo random block of data using several sources. On some systems this may be a bit</td>
  <td>CSecurityManager</td>
</tr>
<tr id="generateRandomBytes">
  <td><a href="/doc/api/1.1/CSecurityManager#generateRandomBytes-detail">generateRandomBytes()</a></td>
  <td>Generates a string of random bytes.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="generateRandomString">
  <td><a href="/doc/api/1.1/CSecurityManager#generateRandomString-detail">generateRandomString()</a></td>
  <td>Generate a random ASCII string. Generates only [0-9a-zA-z_~] characters which are all</td>
  <td>CSecurityManager</td>
</tr>
<tr id="generateSessionRandomBlock">
  <td><a href="/doc/api/1.1/CSecurityManager#generateSessionRandomBlock-detail">generateSessionRandomBlock()</a></td>
  <td>Get random bytes from the system entropy source via PHP session manager.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="getEncryptionKey">
  <td><a href="/doc/api/1.1/CSecurityManager#getEncryptionKey-detail">getEncryptionKey()</a></td>
  <td>Returns the private key used to encrypt/decrypt data.
If the key is not explicitly set, a random one is generated and returned.</td>
  <td>CSecurityManager</td>
</tr>
<tr class="inherited" id="getEventHandlers">
  <td><a href="/doc/api/1.1/CComponent#getEventHandlers-detail">getEventHandlers()</a></td>
  <td>Returns the list of attached event handlers for an event.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="getIsInitialized">
  <td><a href="/doc/api/1.1/CApplicationComponent#getIsInitialized-detail">getIsInitialized()</a></td>
  <td>Checks if this application component has been initialized.</td>
  <td><a href="/doc/api/1.1/CApplicationComponent">CApplicationComponent</a></td>
</tr>
<tr id="getValidation">
  <td><a href="/doc/api/1.1/CSecurityManager#getValidation-detail">getValidation()</a></td>
  <td>This method has been deprecated since version 1.1.3.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="getValidationKey">
  <td><a href="/doc/api/1.1/CSecurityManager#getValidationKey-detail">getValidationKey()</a></td>
  <td>Returns the private key used to generate HMAC.
If the key is not explicitly set, a random one is generated and returned.</td>
  <td>CSecurityManager</td>
</tr>
<tr class="inherited" id="hasEvent">
  <td><a href="/doc/api/1.1/CComponent#hasEvent-detail">hasEvent()</a></td>
  <td>Determines whether an event is defined.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="hasEventHandler">
  <td><a href="/doc/api/1.1/CComponent#hasEventHandler-detail">hasEventHandler()</a></td>
  <td>Checks whether the named event has attached handlers.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr class="inherited" id="hasProperty">
  <td><a href="/doc/api/1.1/CComponent#hasProperty-detail">hasProperty()</a></td>
  <td>Determines whether a property is defined.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr id="hashData">
  <td><a href="/doc/api/1.1/CSecurityManager#hashData-detail">hashData()</a></td>
  <td>Prefixes data with an HMAC.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="init">
  <td><a href="/doc/api/1.1/CSecurityManager#init-detail">init()</a></td>
  <td></td>
  <td>CSecurityManager</td>
</tr>
<tr id="legacyDecrypt">
  <td><a href="/doc/api/1.1/CSecurityManager#legacyDecrypt-detail">legacyDecrypt()</a></td>
  <td>Decrypts legacy ciphertext which was produced by the old, broken implementation of encrypt().</td>
  <td>CSecurityManager</td>
</tr>
<tr class="inherited" id="raiseEvent">
  <td><a href="/doc/api/1.1/CComponent#raiseEvent-detail">raiseEvent()</a></td>
  <td>Raises an event.</td>
  <td><a href="/doc/api/1.1/CComponent">CComponent</a></td>
</tr>
<tr id="setEncryptionKey">
  <td><a href="/doc/api/1.1/CSecurityManager#setEncryptionKey-detail">setEncryptionKey()</a></td>
  <td>Sets the key used to encrypt/decrypt data.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="setValidation">
  <td><a href="/doc/api/1.1/CSecurityManager#setValidation-detail">setValidation()</a></td>
  <td>This method has been deprecated since version 1.1.3.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="setValidationKey">
  <td><a href="/doc/api/1.1/CSecurityManager#setValidationKey-detail">setValidationKey()</a></td>
  <td>Sets the key used to generate HMAC</td>
  <td>CSecurityManager</td>
</tr>
<tr id="validateData">
  <td><a href="/doc/api/1.1/CSecurityManager#validateData-detail">validateData()</a></td>
  <td>Validates if data is tampered.</td>
  <td>CSecurityManager</td>
</tr>
</table>
</div>
<div class="summary docMethod">
<h2>Protected Methods</h2>

<p><a href="#" class="toggle">Hide inherited methods</a></p>

<table class="summaryTable">
<colgroup>
	<col class="col-method" />
	<col class="col-description" />
	<col class="col-defined" />
</colgroup>
<tr>
  <th>Method</th><th>Description</th><th>Defined By</th>
</tr>
<tr id="generateRandomKey">
  <td><a href="/doc/api/1.1/CSecurityManager#generateRandomKey-detail">generateRandomKey()</a></td>
  <td></td>
  <td>CSecurityManager</td>
</tr>
<tr id="openCryptModule">
  <td><a href="/doc/api/1.1/CSecurityManager#openCryptModule-detail">openCryptModule()</a></td>
  <td>Opens the mcrypt module with the configuration specified in <a href="/doc/api/1.1/CSecurityManager#cryptAlgorithm">cryptAlgorithm</a>.</td>
  <td>CSecurityManager</td>
</tr>
<tr id="validateEncryptionKey()">
  <td><a href="/doc/api/1.1/CSecurityManager#validateEncryptionKey()-detail">validateEncryptionKey()</a></td>
  <td>Checks if a key is valid for <a href="/doc/api/1.1/CSecurityManager#cryptAlgorithm">cryptAlgorithm</a>.</td>
  <td>CSecurityManager</td>
</tr>
</table>
</div>
<a name="events"></a>

<h2>Property Details</h2>
<div class="detailHeader" id="cryptAlgorithm-detail">
cryptAlgorithm<span class="detailHeaderTag">
property
 (available since v1.1.3)
</span>
</div>

<div class="signature">
public mixed <b>$cryptAlgorithm</b>;</div>

<p>the name of the crypt algorithm to be used by <a href="/doc/api/1.1/CSecurityManager#encrypt">encrypt</a> and <a href="/doc/api/1.1/CSecurityManager#decrypt">decrypt</a>.
This will be passed as the first parameter to <a href="http://php.net/manual/en/function.mcrypt-module-open.php">mcrypt_module_open</a>.
<br/><br/>
This property can also be configured as an array. In this case, the array elements will be passed in order
as parameters to mcrypt_module_open. For example, <code>array('rijndael-128', '', 'ofb', '')</code>.
<br/><br/>
Defaults to AES
<br/><br/>
Note: MCRYPT_RIJNDAEL_192 and MCRYPT_RIJNDAEL_256 are *not* AES-192 and AES-256. The numbers of the MCRYPT_RIJNDAEL
constants refer to the block size, whereas the numbers of the AES variants refer to the key length. AES is Rijndael
with a block size of 128 bits and a key length of 128 bits, 192 bits or 256 bits. So to use AES in Mcrypt, you need
MCRYPT_RIJNDAEL_128 and a key with 16 bytes (AES-128), 24 bytes (AES-192) or 32 bytes (AES-256). The other two
Rijndael variants in Mcrypt should be avoided, because they're not standardized and have been analyzed much less
than AES.</p>


<div class="detailHeader" id="encryptionKey-detail">
encryptionKey<span class="detailHeaderTag">
property
</span>
</div>

<div class="signature">
public string <a href="/doc/api/1.1/CSecurityManager#getEncryptionKey"><b>getEncryptionKey</b></a>()<br/>public void <a href="/doc/api/1.1/CSecurityManager#setEncryptionKey"><b>setEncryptionKey</b></a>(string $value)</div>

<p>the private key used to encrypt/decrypt data.
If the key is not explicitly set, a random one is generated and returned.</p>


<div class="detailHeader" id="encryptionKeyMinimumLengths-detail">
encryptionKeyMinimumLengths<span class="detailHeaderTag">
property
</span>
</div>

<div class="signature">
protected static array <b>$encryptionKeyMinimumLengths</b>;</div>

<p>known minimum lengths per encryption algorithm</p>


<div class="detailHeader" id="hashAlgorithm-detail">
hashAlgorithm<span class="detailHeaderTag">
property
 (available since v1.1.3)
</span>
</div>

<div class="signature">
public string <b>$hashAlgorithm</b>;</div>

<p>the name of the hashing algorithm to be used by <a href="/doc/api/1.1/CSecurityManager#computeHMAC">computeHMAC</a>.
See <a href="http://php.net/manual/en/function.hash-algos.php">hash-algos</a> for the list of possible
hash algorithms. Note that if you are using PHP 5.1.1 or below, you can only use 'sha1' or 'md5'.
<br/><br/>
Defaults to 'sha1', meaning using SHA1 hash algorithm.</p>


<div class="detailHeader" id="validateEncryptionKey-detail">
validateEncryptionKey<span class="detailHeaderTag">
property
</span>
</div>

<div class="signature">
public boolean <b>$validateEncryptionKey</b>;</div>

<p>if encryption key should be validated</p>


<div class="detailHeader" id="validation-detail">
validation<span class="detailHeaderTag">
property
</span>
</div>

<div class="signature">
public string <a href="/doc/api/1.1/CSecurityManager#getValidation"><b>getValidation</b></a>()<br/>public void <a href="/doc/api/1.1/CSecurityManager#setValidation"><b>setValidation</b></a>(string $value)</div>

<p>This method has been deprecated since version 1.1.3.
Please use <a href="/doc/api/1.1/CSecurityManager#hashAlgorithm">hashAlgorithm</a> instead.</p>


<div class="detailHeader" id="validationKey-detail">
validationKey<span class="detailHeaderTag">
property
</span>
</div>

<div class="signature">
public string <a href="/doc/api/1.1/CSecurityManager#getValidationKey"><b>getValidationKey</b></a>()<br/>public void <a href="/doc/api/1.1/CSecurityManager#setValidationKey"><b>setValidationKey</b></a>(string $value)</div>

<p>the private key used to generate HMAC.
If the key is not explicitly set, a random one is generated and returned.</p>


<h2>Method Details</h2>

<div class="detailHeader" id="compareString-detail">
compareString()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public boolean <b>compareString</b>(string $expected, string $actual)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$expected</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">string to compare.</td>
</tr>
<tr>
  <td class="paramNameCol">$actual</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">user-supplied string.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">boolean</td>
  <td class="paramDescCol">whether strings are equal.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L601">framework/base/CSecurityManager.php#601</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">compareString</span><span style="color: #007700">(</span><span style="color: #0000BB">$expected</span><span style="color: #007700">,</span><span style="color: #0000BB">$actual</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$expected</span><span style="color: #007700">.=</span><span style="color: #DD0000">"\0"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$actual</span><span style="color: #007700">.=</span><span style="color: #DD0000">"\0"</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$expectedLength</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$expected</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$actualLength</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$actual</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$diff</span><span style="color: #007700">=</span><span style="color: #0000BB">$expectedLength</span><span style="color: #007700">-</span><span style="color: #0000BB">$actualLength</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;for(</span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0</span><span style="color: #007700">;</span><span style="color: #0000BB">$i</span><span style="color: #007700">&lt;</span><span style="color: #0000BB">$actualLength</span><span style="color: #007700">;</span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$diff</span><span style="color: #007700">|=(</span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$actual</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">])^</span><span style="color: #0000BB">ord</span><span style="color: #007700">(</span><span style="color: #0000BB">$expected</span><span style="color: #007700">[</span><span style="color: #0000BB">$i</span><span style="color: #007700">%</span><span style="color: #0000BB">$expectedLength</span><span style="color: #007700">]));<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$diff</span><span style="color: #007700">===</span><span style="color: #0000BB">0</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>Performs string comparison using timing attack resistant approach.</p>

<div class="SeeAlso">
<h4>See Also</h4>
<ul>
	<li><a href="http://codereview.stackexchange.com/questions/13512">http://codereview.stackexchange.com/questions/13512</a></li>
</ul>
</div>

<div class="detailHeader" id="computeHMAC-detail">
computeHMAC()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>computeHMAC</b>(string $data, string|null $key=NULL, string|null $hashAlgorithm=NULL)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$data</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data to be generated HMAC.</td>
</tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string|null</td>
  <td class="paramDescCol">the private key to be used for generating HMAC. Defaults to null, meaning using
<a href="/doc/api/1.1/CSecurityManager#validationKey">validationKey</a> value.</td>
</tr>
<tr>
  <td class="paramNameCol">$hashAlgorithm</td>
  <td class="paramTypeCol">string|null</td>
  <td class="paramDescCol">the name of the hashing algorithm to be used.
See <a href="http://php.net/manual/en/function.hash-algos.php">hash-algos</a> for the list of possible
hash algorithms. Note that if you are using PHP 5.1.1 or below, you can only use 'sha1' or 'md5'.
Defaults to null, meaning using <a href="/doc/api/1.1/CSecurityManager#hashAlgorithm">hashAlgorithm</a> value.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the HMAC for the data.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L325">framework/base/CSecurityManager.php#325</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">computeHMAC</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">,</span><span style="color: #0000BB">$hashAlgorithm</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$key</span><span style="color: #007700">===</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">getValidationKey</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$hashAlgorithm</span><span style="color: #007700">===</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$hashAlgorithm</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">hashAlgorithm</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">function_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'hash_hmac'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">hash_hmac</span><span style="color: #007700">(</span><span style="color: #0000BB">$hashAlgorithm</span><span style="color: #007700">,</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">0</span><span style="color: #007700">===</span><span style="color: #0000BB">strcasecmp</span><span style="color: #007700">(</span><span style="color: #0000BB">$hashAlgorithm</span><span style="color: #007700">,</span><span style="color: #DD0000">'sha1'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pack</span><span style="color: #007700">=</span><span style="color: #DD0000">'H40'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$func</span><span style="color: #007700">=</span><span style="color: #DD0000">'sha1'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;elseif(</span><span style="color: #0000BB">0</span><span style="color: #007700">===</span><span style="color: #0000BB">strcasecmp</span><span style="color: #007700">(</span><span style="color: #0000BB">$hashAlgorithm</span><span style="color: #007700">,</span><span style="color: #DD0000">'md5'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$pack</span><span style="color: #007700">=</span><span style="color: #DD0000">'H32'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$func</span><span style="color: #007700">=</span><span style="color: #DD0000">'md5'</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Only&nbsp;SHA1&nbsp;and&nbsp;MD5&nbsp;hashing&nbsp;algorithms&nbsp;are&nbsp;supported&nbsp;when&nbsp;using&nbsp;PHP&nbsp;5.1.1&nbsp;or&nbsp;below.'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">)&gt;</span><span style="color: #0000BB">64</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">pack</span><span style="color: #007700">(</span><span style="color: #0000BB">$pack</span><span style="color: #007700">,</span><span style="color: #0000BB">$func</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">)&lt;</span><span style="color: #0000BB">64</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">str_pad</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">,</span><span style="color: #0000BB">64</span><span style="color: #007700">,</span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">0</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">64</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$func</span><span style="color: #007700">((</span><span style="color: #0000BB">str_repeat</span><span style="color: #007700">(</span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">0x5C</span><span style="color: #007700">),&nbsp;</span><span style="color: #0000BB">64</span><span style="color: #007700">)&nbsp;^&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #0000BB">pack</span><span style="color: #007700">(</span><span style="color: #0000BB">$pack</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$func</span><span style="color: #007700">((</span><span style="color: #0000BB">str_repeat</span><span style="color: #007700">(</span><span style="color: #0000BB">chr</span><span style="color: #007700">(</span><span style="color: #0000BB">0x36</span><span style="color: #007700">),&nbsp;</span><span style="color: #0000BB">64</span><span style="color: #007700">)&nbsp;^&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">)&nbsp;.&nbsp;</span><span style="color: #0000BB">$data</span><span style="color: #007700">)));<br />}</span>
</span>
</code></div>
</div>
<p>Computes the HMAC for the data with <a href="/doc/api/1.1/CSecurityManager#getValidationKey">validationKey</a>. This method has been made public
since 1.1.14.</p>


<div class="detailHeader" id="decrypt-detail">
decrypt()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>decrypt</b>(string $data, string $key=NULL)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$data</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data to be decrypted.</td>
</tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the decryption key. This defaults to null, meaning using <a href="/doc/api/1.1/CSecurityManager#getEncryptionKey">EncryptionKey</a>.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the decrypted data</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L238">framework/base/CSecurityManager.php#238</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">decrypt</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$key</span><span style="color: #007700">===</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">getEncryptionKey</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">validateEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">openCryptModule</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$ivSize</span><span style="color: #007700">=</span><span style="color: #0000BB">mcrypt_enc_get_iv_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$iv</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$ivSize</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_init</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">,</span><span style="color: #0000BB">$iv</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$decrypted</span><span style="color: #007700">=</span><span style="color: #0000BB">mdecrypt_generic</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$ivSize</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">)));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_deinit</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_module_close</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">rtrim</span><span style="color: #007700">(</span><span style="color: #0000BB">$decrypted</span><span style="color: #007700">,</span><span style="color: #DD0000">"\0"</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p>Decrypts data</p>


<div class="detailHeader" id="encrypt-detail">
encrypt()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>encrypt</b>(string $data, string $key=NULL)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$data</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data to be encrypted.</td>
</tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the decryption key. This defaults to null, meaning using <a href="/doc/api/1.1/CSecurityManager#getEncryptionKey">EncryptionKey</a>.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the encrypted data</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L216">framework/base/CSecurityManager.php#216</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">encrypt</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$key</span><span style="color: #007700">===</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">getEncryptionKey</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">validateEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">openCryptModule</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">srand</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$iv</span><span style="color: #007700">=</span><span style="color: #0000BB">mcrypt_create_iv</span><span style="color: #007700">(</span><span style="color: #0000BB">mcrypt_enc_get_iv_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">),&nbsp;</span><span style="color: #0000BB">MCRYPT_RAND</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_init</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">,</span><span style="color: #0000BB">$iv</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$encrypted</span><span style="color: #007700">=</span><span style="color: #0000BB">$iv</span><span style="color: #007700">.</span><span style="color: #0000BB">mcrypt_generic</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">,</span><span style="color: #0000BB">$data</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_deinit</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_module_close</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$encrypted</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>Encrypts data.</p>


<div class="detailHeader" id="generatePseudoRandomBlock-detail">
generatePseudoRandomBlock()
<span class="detailHeaderTag">
method
(available since v1.1.14)
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>generatePseudoRandomBlock</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">of 64 pseudo random bytes.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L438">framework/base/CSecurityManager.php#438</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">generatePseudoRandomBlock</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #0000BB">function_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'openssl_random_pseudo_bytes'</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=</span><span style="color: #0000BB">openssl_random_pseudo_bytes</span><span style="color: #007700">(</span><span style="color: #0000BB">512</span><span style="color: #007700">))!==</span><span style="color: #0000BB">false<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&gt;=</span><span style="color: #0000BB">512</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">512</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;for(</span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0</span><span style="color: #007700">;</span><span style="color: #0000BB">$i</span><span style="color: #007700">&lt;</span><span style="color: #0000BB">32</span><span style="color: #007700">;++</span><span style="color: #0000BB">$i</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">.=</span><span style="color: #0000BB">pack</span><span style="color: #007700">(</span><span style="color: #DD0000">'S'</span><span style="color: #007700">,</span><span style="color: #0000BB">mt_rand</span><span style="color: #007700">(</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">0xffff</span><span style="color: #007700">));<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;On&nbsp;UNIX&nbsp;and&nbsp;UNIX-like&nbsp;operating&nbsp;systems&nbsp;the&nbsp;numerical&nbsp;values&nbsp;in&nbsp;`ps`,&nbsp;`uptime`&nbsp;and&nbsp;`iostat`<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ought&nbsp;to&nbsp;be&nbsp;fairly&nbsp;unpredictable.&nbsp;Gather&nbsp;the&nbsp;non-zero&nbsp;digits&nbsp;from&nbsp;those.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">foreach(array(</span><span style="color: #DD0000">'ps'</span><span style="color: #007700">,</span><span style="color: #DD0000">'uptime'</span><span style="color: #007700">,</span><span style="color: #DD0000">'iostat'</span><span style="color: #007700">)&nbsp;as&nbsp;</span><span style="color: #0000BB">$command</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@</span><span style="color: #0000BB">exec</span><span style="color: #007700">(</span><span style="color: #0000BB">$command</span><span style="color: #007700">,</span><span style="color: #0000BB">$commandResult</span><span style="color: #007700">,</span><span style="color: #0000BB">$retVal</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">is_array</span><span style="color: #007700">(</span><span style="color: #0000BB">$commandResult</span><span style="color: #007700">)&nbsp;&amp;&amp;&nbsp;!empty(</span><span style="color: #0000BB">$commandResult</span><span style="color: #007700">)&nbsp;&amp;&amp;&nbsp;</span><span style="color: #0000BB">$retVal</span><span style="color: #007700">==</span><span style="color: #0000BB">0</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">.=</span><span style="color: #0000BB">preg_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">'/[^1-9]/'</span><span style="color: #007700">,</span><span style="color: #DD0000">''</span><span style="color: #007700">,</span><span style="color: #0000BB">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">,</span><span style="color: #0000BB">$commandResult</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Gather&nbsp;the&nbsp;current&nbsp;time's&nbsp;microsecond&nbsp;part.&nbsp;Note:&nbsp;this&nbsp;is&nbsp;only&nbsp;a&nbsp;source&nbsp;of&nbsp;entropy&nbsp;on<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;first&nbsp;call!&nbsp;If&nbsp;multiple&nbsp;calls&nbsp;are&nbsp;made,&nbsp;the&nbsp;entropy&nbsp;is&nbsp;only&nbsp;as&nbsp;much&nbsp;as&nbsp;the<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;randomness&nbsp;in&nbsp;the&nbsp;time&nbsp;between&nbsp;calls.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">.=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">microtime</span><span style="color: #007700">(),</span><span style="color: #0000BB">2</span><span style="color: #007700">,</span><span style="color: #0000BB">6</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;Concatenate&nbsp;everything&nbsp;gathered,&nbsp;mix&nbsp;it&nbsp;with&nbsp;sha512.&nbsp;hash()&nbsp;is&nbsp;part&nbsp;of&nbsp;PHP&nbsp;core&nbsp;and<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;enabled&nbsp;by&nbsp;default&nbsp;but&nbsp;it&nbsp;can&nbsp;be&nbsp;disabled&nbsp;at&nbsp;compile&nbsp;time&nbsp;but&nbsp;we&nbsp;ignore&nbsp;that&nbsp;possibility&nbsp;here.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">return&nbsp;</span><span style="color: #0000BB">hash</span><span style="color: #007700">(</span><span style="color: #DD0000">'sha512'</span><span style="color: #007700">,</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">true</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p>Generate a pseudo random block of data using several sources. On some systems this may be a bit
better than PHP's mt_rand built-in function, which is not really random.</p>


<div class="detailHeader" id="generateRandomBytes-detail">
generateRandomBytes()
<span class="detailHeaderTag">
method
(available since v1.1.14)
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public boolean|string <b>generateRandomBytes</b>(integer $length, boolean $cryptographicallyStrong=true)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$length</td>
  <td class="paramTypeCol">integer</td>
  <td class="paramDescCol">number of random bytes to be generated.</td>
</tr>
<tr>
  <td class="paramNameCol">$cryptographicallyStrong</td>
  <td class="paramTypeCol">boolean</td>
  <td class="paramDescCol">whether to fail if a cryptographically strong
result cannot be generated. The method attempts to read from a cryptographically strong
pseudorandom number generator (CS-PRNG), see
<a href="https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator#Requirements">Wikipedia</a>.
However, in some runtime environments, PHP has no access to a CS-PRNG, in which case
the method returns false if $cryptographicallyStrong is true. When $cryptographicallyStrong is false,
the method always returns a pseudorandom result but may fall back to using <a href="/doc/api/1.1/CSecurityManager#generatePseudoRandomBlock">generatePseudoRandomBlock</a>.
This method does not guarantee that entropy, from sources external to the CS-PRNG, was mixed into
the CS-PRNG state between each successive call. The caller can therefore expect non-blocking
behavior, unlike, for example, reading from /dev/random on Linux, see
<a href="http://eprint.iacr.org/2006/086.pdf">Gutterman et al 2006</a>.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">boolean|string</td>
  <td class="paramDescCol">generated random binary string or false on failure.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L389">framework/base/CSecurityManager.php#389</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">generateRandomBytes</span><span style="color: #007700">(</span><span style="color: #0000BB">$length</span><span style="color: #007700">,</span><span style="color: #0000BB">$cryptographicallyStrong</span><span style="color: #007700">=</span><span style="color: #0000BB">true</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=</span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">function_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'openssl_random_pseudo_bytes'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=</span><span style="color: #0000BB">openssl_random_pseudo_bytes</span><span style="color: #007700">(</span><span style="color: #0000BB">$length</span><span style="color: #007700">,</span><span style="color: #0000BB">$strong</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&gt;=</span><span style="color: #0000BB">$length&nbsp;</span><span style="color: #007700">&amp;&amp;&nbsp;(</span><span style="color: #0000BB">$strong&nbsp;</span><span style="color: #007700">||&nbsp;!</span><span style="color: #0000BB">$cryptographicallyStrong</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">function_exists</span><span style="color: #007700">(</span><span style="color: #DD0000">'mcrypt_create_iv'</span><span style="color: #007700">)&nbsp;&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=</span><span style="color: #0000BB">mcrypt_create_iv</span><span style="color: #007700">(</span><span style="color: #0000BB">$length</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">MCRYPT_DEV_URANDOM</span><span style="color: #007700">))!==</span><span style="color: #0000BB">false&nbsp;</span><span style="color: #007700">&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&gt;=</span><span style="color: #0000BB">$length</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$file</span><span style="color: #007700">=@</span><span style="color: #0000BB">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/dev/urandom'</span><span style="color: #007700">,</span><span style="color: #DD0000">'rb'</span><span style="color: #007700">))!==</span><span style="color: #0000BB">false&nbsp;</span><span style="color: #007700">&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=@</span><span style="color: #0000BB">fread</span><span style="color: #007700">(</span><span style="color: #0000BB">$file</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">))!==</span><span style="color: #0000BB">false&nbsp;</span><span style="color: #007700">&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span style="color: #0000BB">fclose</span><span style="color: #007700">(</span><span style="color: #0000BB">$file</span><span style="color: #007700">)&nbsp;||&nbsp;</span><span style="color: #0000BB">true</span><span style="color: #007700">)&nbsp;&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&gt;=</span><span style="color: #0000BB">$length</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$i</span><span style="color: #007700">=</span><span style="color: #0000BB">0</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;while(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&lt;</span><span style="color: #0000BB">$length&nbsp;</span><span style="color: #007700">&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span style="color: #0000BB">$byte</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateSessionRandomBlock</span><span style="color: #007700">())!==</span><span style="color: #0000BB">false&nbsp;</span><span style="color: #007700">&amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++</span><span style="color: #0000BB">$i</span><span style="color: #007700">&lt;</span><span style="color: #0000BB">3</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">.=</span><span style="color: #0000BB">$byte</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&gt;=</span><span style="color: #0000BB">$length</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #0000BB">$cryptographicallyStrong</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;while(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)&lt;</span><span style="color: #0000BB">$length</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">.=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generatePseudoRandomBlock</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p>Generates a string of random bytes.</p>


<div class="detailHeader" id="generateRandomKey-detail">
generateRandomKey()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
protected string <b>generateRandomKey</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">a randomly generated private key.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L108">framework/base/CSecurityManager.php#108</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">protected&nbsp;function&nbsp;</span><span style="color: #0000BB">generateRandomKey</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateRandomString</span><span style="color: #007700">(</span><span style="color: #0000BB">32</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p></p>


<div class="detailHeader" id="generateRandomString-detail">
generateRandomString()
<span class="detailHeaderTag">
method
(available since v1.1.14)
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string|boolean <b>generateRandomString</b>(integer $length, boolean $cryptographicallyStrong=true)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$length</td>
  <td class="paramTypeCol">integer</td>
  <td class="paramDescCol">length of the generated string in characters.</td>
</tr>
<tr>
  <td class="paramNameCol">$cryptographicallyStrong</td>
  <td class="paramTypeCol">boolean</td>
  <td class="paramDescCol">set this to require cryptographically strong randomness.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string|boolean</td>
  <td class="paramDescCol">random string or false in case it cannot be generated.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L365">framework/base/CSecurityManager.php#365</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">generateRandomString</span><span style="color: #007700">(</span><span style="color: #0000BB">$length</span><span style="color: #007700">,</span><span style="color: #0000BB">$cryptographicallyStrong</span><span style="color: #007700">=</span><span style="color: #0000BB">true</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$randomBytes</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateRandomBytes</span><span style="color: #007700">(</span><span style="color: #0000BB">$length</span><span style="color: #007700">+</span><span style="color: #0000BB">2</span><span style="color: #007700">,</span><span style="color: #0000BB">$cryptographicallyStrong</span><span style="color: #007700">))!==</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">strtr</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">base64_encode</span><span style="color: #007700">(</span><span style="color: #0000BB">$randomBytes</span><span style="color: #007700">),</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$length</span><span style="color: #007700">),array(</span><span style="color: #DD0000">'+'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'_'</span><span style="color: #007700">,</span><span style="color: #DD0000">'/'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">'~'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>Generate a random ASCII string. Generates only [0-9a-zA-z_~] characters which are all
transparent in raw URL encoding.</p>


<div class="detailHeader" id="generateSessionRandomBlock-detail">
generateSessionRandomBlock()
<span class="detailHeaderTag">
method
(available since v1.1.14)
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public boolean|string <b>generateSessionRandomBlock</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">boolean|string</td>
  <td class="paramDescCol">20-byte random binary string or false on error.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L475">framework/base/CSecurityManager.php#475</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">generateSessionRandomBlock</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.entropy_length'</span><span style="color: #007700">,</span><span style="color: #0000BB">20</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.entropy_length'</span><span style="color: #007700">)!=</span><span style="color: #0000BB">20</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;These&nbsp;calls&nbsp;are&nbsp;(supposed&nbsp;to&nbsp;be,&nbsp;according&nbsp;to&nbsp;PHP&nbsp;manual)&nbsp;safe&nbsp;even&nbsp;if<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;there&nbsp;is&nbsp;already&nbsp;an&nbsp;active&nbsp;session&nbsp;for&nbsp;the&nbsp;calling&nbsp;script.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">@</span><span style="color: #0000BB">session_start</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;@</span><span style="color: #0000BB">session_regenerate_id</span><span style="color: #007700">();<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">=</span><span style="color: #0000BB">session_id</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;if(!</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$bytes&nbsp;has&nbsp;20&nbsp;bytes&nbsp;of&nbsp;entropy&nbsp;but&nbsp;the&nbsp;session&nbsp;manager&nbsp;converts&nbsp;the&nbsp;binary<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;random&nbsp;bytes&nbsp;into&nbsp;something&nbsp;readable.&nbsp;We&nbsp;have&nbsp;to&nbsp;convert&nbsp;that&nbsp;back.<br />&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;SHA-1&nbsp;should&nbsp;do&nbsp;it&nbsp;without&nbsp;losing&nbsp;entropy.<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">return&nbsp;</span><span style="color: #0000BB">sha1</span><span style="color: #007700">(</span><span style="color: #0000BB">$bytes</span><span style="color: #007700">,</span><span style="color: #0000BB">true</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p>Get random bytes from the system entropy source via PHP session manager.</p>


<div class="detailHeader" id="getEncryptionKey-detail">
getEncryptionKey()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>getEncryptionKey</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the private key used to encrypt/decrypt data.
If the key is not explicitly set, a random one is generated and returned.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L156">framework/base/CSecurityManager.php#156</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">getEncryptionKey</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_encryptionKey</span><span style="color: #007700">!==</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_encryptionKey</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">app</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">getGlobalState</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">STATE_ENCRYPTION_KEY</span><span style="color: #007700">))!==</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">setEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateRandomString</span><span style="color: #007700">(</span><span style="color: #0000BB">32</span><span style="color: #007700">,</span><span style="color: #0000BB">true</span><span style="color: #007700">))===</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateRandomString</span><span style="color: #007700">(</span><span style="color: #0000BB">32</span><span style="color: #007700">,</span><span style="color: #0000BB">false</span><span style="color: #007700">))===</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'CSecurityManager::generateRandomString()&nbsp;cannot&nbsp;generate&nbsp;random&nbsp;string&nbsp;in&nbsp;the&nbsp;current&nbsp;environment.'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">setEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">app</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">setGlobalState</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">STATE_ENCRYPTION_KEY</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_encryptionKey</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}</span>
</span>
</code></div>
</div>
<p></p>


<div class="detailHeader" id="getValidation-detail">
getValidation()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>getValidation</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">-</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L193">framework/base/CSecurityManager.php#193</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">getValidation</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">hashAlgorithm</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>This method has been deprecated since version 1.1.3.
Please use <a href="/doc/api/1.1/CSecurityManager#hashAlgorithm">hashAlgorithm</a> instead.</p>


<div class="detailHeader" id="getValidationKey-detail">
getValidationKey()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>getValidationKey</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the private key used to generate HMAC.
If the key is not explicitly set, a random one is generated and returned.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L118">framework/base/CSecurityManager.php#118</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">getValidationKey</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_validationKey</span><span style="color: #007700">!==</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_validationKey</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">app</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">getGlobalState</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">STATE_VALIDATION_KEY</span><span style="color: #007700">))!==</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">setValidationKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateRandomString</span><span style="color: #007700">(</span><span style="color: #0000BB">32</span><span style="color: #007700">,</span><span style="color: #0000BB">true</span><span style="color: #007700">))===</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">generateRandomString</span><span style="color: #007700">(</span><span style="color: #0000BB">32</span><span style="color: #007700">,</span><span style="color: #0000BB">false</span><span style="color: #007700">))===</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">'CSecurityManager::generateRandomString()&nbsp;cannot&nbsp;generate&nbsp;random&nbsp;string&nbsp;in&nbsp;the&nbsp;current&nbsp;environment.'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">setValidationKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">app</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">setGlobalState</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">STATE_VALIDATION_KEY</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_validationKey</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}</span>
</span>
</code></div>
</div>
<p></p>


<div class="detailHeader" id="hashData-detail">
hashData()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>hashData</b>(string $data, string $key=NULL)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$data</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data to be hashed.</td>
</tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the private key to be used for generating HMAC. Defaults to null, meaning using <a href="/doc/api/1.1/CSecurityManager#validationKey">validationKey</a>.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data prefixed with HMAC</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L283">framework/base/CSecurityManager.php#283</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">hashData</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">computeHMAC</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">).</span><span style="color: #0000BB">$data</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>Prefixes data with an HMAC.</p>


<div class="detailHeader" id="init-detail">
init()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public void <b>init</b>()</div>
</td></tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L98">framework/base/CSecurityManager.php#98</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">init</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">parent</span><span style="color: #007700">::</span><span style="color: #0000BB">init</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_mbstring</span><span style="color: #007700">=</span><span style="color: #0000BB">extension_loaded</span><span style="color: #007700">(</span><span style="color: #DD0000">'mbstring'</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p></p>


<div class="detailHeader" id="legacyDecrypt-detail">
legacyDecrypt()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>legacyDecrypt</b>(string $data, string $key=NULL, string|array $cipher='des')</div>
</td></tr>
<tr>
  <td class="paramNameCol">$data</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data to be decrypted.</td>
</tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the decryption key. This defaults to null, meaning the key should be loaded from persistent storage.</td>
</tr>
<tr>
  <td class="paramNameCol">$cipher</td>
  <td class="paramTypeCol">string|array</td>
  <td class="paramDescCol">the algorithm to be used</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the decrypted data</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L562">framework/base/CSecurityManager.php#562</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">legacyDecrypt</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">,</span><span style="color: #0000BB">$cipher</span><span style="color: #007700">=</span><span style="color: #DD0000">'des'</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #0000BB">$key</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">app</span><span style="color: #007700">()-&gt;</span><span style="color: #0000BB">getGlobalState</span><span style="color: #007700">(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">STATE_ENCRYPTION_KEY</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!</span><span style="color: #0000BB">$key</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'No&nbsp;encryption&nbsp;key&nbsp;specified.'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">extension_loaded</span><span style="color: #007700">(</span><span style="color: #DD0000">'mcrypt'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">is_array</span><span style="color: #007700">(</span><span style="color: #0000BB">$cipher</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">=@</span><span style="color: #0000BB">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'mcrypt_module_open'</span><span style="color: #007700">,</span><span style="color: #0000BB">$cipher</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">=@</span><span style="color: #0000BB">mcrypt_module_open</span><span style="color: #007700">(</span><span style="color: #0000BB">$cipher</span><span style="color: #007700">,</span><span style="color: #DD0000">''</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">MCRYPT_MODE_CBC</span><span style="color: #007700">,</span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$module</span><span style="color: #007700">===</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Failed&nbsp;to&nbsp;initialize&nbsp;the&nbsp;mcrypt&nbsp;module.'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'CSecurityManager&nbsp;requires&nbsp;PHP&nbsp;mcrypt&nbsp;extension&nbsp;to&nbsp;be&nbsp;loaded&nbsp;in&nbsp;order&nbsp;to&nbsp;use&nbsp;data&nbsp;encryption&nbsp;feature.'</span><span style="color: #007700">));<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$derivedKey</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">md5</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">),</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">mcrypt_enc_get_key_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$ivSize</span><span style="color: #007700">=</span><span style="color: #0000BB">mcrypt_enc_get_iv_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$iv</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$ivSize</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_init</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">,</span><span style="color: #0000BB">$derivedKey</span><span style="color: #007700">,</span><span style="color: #0000BB">$iv</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$decrypted</span><span style="color: #007700">=</span><span style="color: #0000BB">mdecrypt_generic</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$ivSize</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">)));<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_generic_deinit</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">mcrypt_module_close</span><span style="color: #007700">(</span><span style="color: #0000BB">$module</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">rtrim</span><span style="color: #007700">(</span><span style="color: #0000BB">$decrypted</span><span style="color: #007700">,</span><span style="color: #DD0000">"\0"</span><span style="color: #007700">);<br />}</span>
</span>
</code></div>
</div>
<p>Decrypts legacy ciphertext which was produced by the old, broken implementation of encrypt().</p>


<div class="detailHeader" id="openCryptModule-detail">
openCryptModule()
<span class="detailHeaderTag">
method
(available since v1.1.3)
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
protected resource <b>openCryptModule</b>()</div>
</td></tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">resource</td>
  <td class="paramDescCol">the mycrypt module handle.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L259">framework/base/CSecurityManager.php#259</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">protected&nbsp;function&nbsp;</span><span style="color: #0000BB">openCryptModule</span><span style="color: #007700">()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">extension_loaded</span><span style="color: #007700">(</span><span style="color: #DD0000">'mcrypt'</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">is_array</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">=@</span><span style="color: #0000BB">call_user_func_array</span><span style="color: #007700">(</span><span style="color: #DD0000">'mcrypt_module_open'</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">=@</span><span style="color: #0000BB">mcrypt_module_open</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">,</span><span style="color: #DD0000">''</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">MCRYPT_MODE_CBC</span><span style="color: #007700">,</span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$module</span><span style="color: #007700">===</span><span style="color: #0000BB">false</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Failed&nbsp;to&nbsp;initialize&nbsp;the&nbsp;mcrypt&nbsp;module.'</span><span style="color: #007700">));<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$module</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'CSecurityManager&nbsp;requires&nbsp;PHP&nbsp;mcrypt&nbsp;extension&nbsp;to&nbsp;be&nbsp;loaded&nbsp;in&nbsp;order&nbsp;to&nbsp;use&nbsp;data&nbsp;encryption&nbsp;feature.'</span><span style="color: #007700">));<br />}</span>
</span>
</code></div>
</div>
<p>Opens the mcrypt module with the configuration specified in <a href="/doc/api/1.1/CSecurityManager#cryptAlgorithm">cryptAlgorithm</a>.</p>


<div class="detailHeader" id="setEncryptionKey-detail">
setEncryptionKey()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public void <b>setEncryptionKey</b>(string $value)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$value</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the key used to encrypt/decrypt data.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L181">framework/base/CSecurityManager.php#181</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">setEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">validateEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_encryptionKey</span><span style="color: #007700">=</span><span style="color: #0000BB">$value</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p></p>


<div class="detailHeader" id="setValidation-detail">
setValidation()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public void <b>setValidation</b>(string $value)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$value</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">-</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L204">framework/base/CSecurityManager.php#204</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">setValidation</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">hashAlgorithm</span><span style="color: #007700">=</span><span style="color: #0000BB">$value</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>This method has been deprecated since version 1.1.3.
Please use <a href="/doc/api/1.1/CSecurityManager#hashAlgorithm">hashAlgorithm</a> instead.</p>


<div class="detailHeader" id="setValidationKey-detail">
setValidationKey()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public void <b>setValidationKey</b>(string $value)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$value</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the key used to generate HMAC</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L143">framework/base/CSecurityManager.php#143</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">setValidationKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(!empty(</span><span style="color: #0000BB">$value</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_validationKey</span><span style="color: #007700">=</span><span style="color: #0000BB">$value</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'CSecurityManager.validationKey&nbsp;cannot&nbsp;be&nbsp;empty.'</span><span style="color: #007700">));<br />}</span>
</span>
</code></div>
</div>
<p></p>


<div class="detailHeader" id="validateData-detail">
validateData()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
public string <b>validateData</b>(string $data, string $key=NULL)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$data</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">data to be validated. The data must be previously
generated using <a href="/doc/api/1.1/CSecurityManager#hashData">hashData()</a>.</td>
</tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the private key to be used for generating HMAC. Defaults to null, meaning using <a href="/doc/api/1.1/CSecurityManager#validationKey">validationKey</a>.</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the real data with HMAC stripped off. False if the data
is tampered.</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L296">framework/base/CSecurityManager.php#296</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">public&nbsp;function&nbsp;</span><span style="color: #0000BB">validateData</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">=</span><span style="color: #0000BB">null</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</span><span style="color: #0000BB">is_string</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$len</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">computeHMAC</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">)&gt;=</span><span style="color: #0000BB">$len</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$hmac</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">0</span><span style="color: #007700">,</span><span style="color: #0000BB">$len</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$data2</span><span style="color: #007700">=</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">substr</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">,</span><span style="color: #0000BB">$len</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$data</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">compareString</span><span style="color: #007700">(</span><span style="color: #0000BB">$hmac</span><span style="color: #007700">,</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">computeHMAC</span><span style="color: #007700">(</span><span style="color: #0000BB">$data2</span><span style="color: #007700">,</span><span style="color: #0000BB">$key</span><span style="color: #007700">))?</span><span style="color: #0000BB">$data2</span><span style="color: #007700">:</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">;<br />}</span>
</span>
</code></div>
</div>
<p>Validates if data is tampered.</p>


<div class="detailHeader" id="validateEncryptionKey()-detail">
validateEncryptionKey()
<span class="detailHeaderTag">
method
</span>
</div>

<table class="summaryTable">
<tr><td colspan="3">
<div class="signature2">
protected boolean <b>validateEncryptionKey</b>(string $key)</div>
</td></tr>
<tr>
  <td class="paramNameCol">$key</td>
  <td class="paramTypeCol">string</td>
  <td class="paramDescCol">the key to check</td>
</tr>
<tr>
  <td class="paramNameCol">{return}</td>
  <td class="paramTypeCol">boolean</td>
  <td class="paramDescCol">the validation result</td>
</tr>
</table>

<div class="sourceCode">
<b>Source Code:</b> <a class="sourceLink" href="https://github.com/yiisoft/yii/blob/1.1.16/framework/base/CSecurityManager.php#L526">framework/base/CSecurityManager.php#526</a> (<b><a href="#" class="show">show</a></b>)
<div class="code"><code><span style="color: #000000">
<span style="color: #0000BB"></span><span style="color: #007700">protected&nbsp;function&nbsp;</span><span style="color: #0000BB">validateEncryptionKey</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">is_string</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">))<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$supportedKeyLengths</span><span style="color: #007700">=</span><span style="color: #0000BB">mcrypt_module_get_supported_key_sizes</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$supportedKeyLengths</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!</span><span style="color: #0000BB">in_array</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">),</span><span style="color: #0000BB">$supportedKeyLengths</span><span style="color: #007700">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Encryption&nbsp;key&nbsp;length&nbsp;can&nbsp;be&nbsp;{keyLengths}'</span><span style="color: #007700">,array(</span><span style="color: #DD0000">'{keyLengths}'</span><span style="color: #007700">=&gt;</span><span style="color: #0000BB">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">,</span><span style="color: #0000BB">$supportedKeyLengths</span><span style="color: #007700">).</span><span style="color: #DD0000">'.'</span><span style="color: #007700">)));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elseif(isset(</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$encryptionKeyMinimumLengths</span><span style="color: #007700">[</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">]))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$minLength</span><span style="color: #007700">=</span><span style="color: #0000BB">self</span><span style="color: #007700">::</span><span style="color: #0000BB">$encryptionKeyMinimumLengths</span><span style="color: #007700">[</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$maxLength</span><span style="color: #007700">=</span><span style="color: #0000BB">mcrypt_module_get_algo_key_size</span><span style="color: #007700">(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">cryptAlgorithm</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">)&lt;</span><span style="color: #0000BB">$minLength&nbsp;</span><span style="color: #007700">||&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">strlen</span><span style="color: #007700">(</span><span style="color: #0000BB">$key</span><span style="color: #007700">)&gt;</span><span style="color: #0000BB">$maxLength</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Encryption&nbsp;key&nbsp;length&nbsp;must&nbsp;be&nbsp;between&nbsp;{minLength}&nbsp;and&nbsp;{maxLength}.'</span><span style="color: #007700">,array(</span><span style="color: #DD0000">'{minLength}'</span><span style="color: #007700">=&gt;</span><span style="color: #0000BB">$minLength</span><span style="color: #007700">,</span><span style="color: #DD0000">'{maxLength}'</span><span style="color: #007700">=&gt;</span><span style="color: #0000BB">$maxLength</span><span style="color: #007700">)));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Failed&nbsp;to&nbsp;validate&nbsp;key.&nbsp;Supported&nbsp;key&nbsp;lengths&nbsp;of&nbsp;cipher&nbsp;not&nbsp;known.'</span><span style="color: #007700">));<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;</span><span style="color: #0000BB">CException</span><span style="color: #007700">(</span><span style="color: #0000BB">Yii</span><span style="color: #007700">::</span><span style="color: #0000BB">t</span><span style="color: #007700">(</span><span style="color: #DD0000">'yii'</span><span style="color: #007700">,</span><span style="color: #DD0000">'Encryption&nbsp;key&nbsp;should&nbsp;be&nbsp;a&nbsp;string.'</span><span style="color: #007700">));<br />}</span>
</span>
</code></div>
</div>
<p>Checks if a key is valid for <a href="/doc/api/1.1/CSecurityManager#cryptAlgorithm">cryptAlgorithm</a>.</p>



		        <div class="widget-comment-list" id="comments">
	<div id="comment-add">
		<h3 id="add-comment">Be the first person to leave a comment</h3>

			<p>Please <a class="g-login" rel="/doc/api/1.1/CSecurityManager#add-comment" href="#">login</a> to leave your comment.</p>
		</div>
</div>
           </div>
</div>
					</div>
				
								<div class="clear"></div>
			</div>
			<div class="clear"></div>
					</div>
	</div>

	<div class="layout-main-footer">
		<div class="container_12">
			<div class="grid_6">
				<ul class="menu">
				<li class="main">About
<ul class="sub">
<li><a href="/about/">About Yii</a></li>
<li><a href="/features/">Features</a></li>
<li><a href="/performance/">Performance</a></li>
<li><a href="/license/">License</a></li>
<li><a href="/contact/">Contact Us</a></li>
</ul>
</li>
<li class="main">Downloads
<ul class="sub">
<li><a href="/download/">Framework</a></li>
<li><a href="/extensions/">Extensions</a></li>
<li><a href="/demos/">Demos</a></li>
<li><a href="/logo/">Logo</a></li>
</ul>
</li>
<li class="main">Documentation
<ul class="sub">
<li><a href="/tour/">Take the Tour</a></li>
<li><a href="/tutorials/">Tutorials</a></li>
<li><a href="/doc/api/">Class Reference</a></li>
<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
<li><a href="/wiki/">Wiki</a></li>
<li><a href="/screencasts/">Screencasts</a></li>
<li><a href="/resources/">Resources</a></li>
</ul>
</li>
<li class="main">Development
<ul class="sub">
<li><a href="/contribute/">Contribute to Yii</a></li>
<li><a href="https://github.com/yiisoft/yii/commits/master">Latest Updates</a></li>
<li><a href="https://github.com/yiisoft/yii/issues/new">Report a Bug</a></li>
<li><a href="/security/">Report a Security Issue</a></li>
</ul>
</li>
<li class="main">Community
<ul class="sub">
<li><a href="/forum/">Forum</a></li>
<li><a href="/chat/">Live Chat</a></li>
<li><a href="/news/">News</a></li>
<li><a href="/user/halloffame/">Hall of Fame</a></li>
<li><a href="/badges/">Badges</a></li>
</ul>
</li>
				</ul>
			</div>
			<div class="grid_1">&nbsp;</div>
			<div class="grid_5">
				<h3>Yii Supporters</h3>
				<ul class="g-list-none supporters">

				</ul>
			</div>

			<div class="clear"></div>
			<div class="grid_12 copyright">
				<ul class="social">
					<li class="twitter"><a href="https://twitter.com/yiiframework" target="_blank" rel="nofollow" title="follow us on twitter">Twitter</a></li>
					<li class="facebook"><a href="https://www.facebook.com/groups/yiitalk/" target="_blank" rel="nofollow" title="join yii group at facebook">Facebook</a></li>
					<li class="linkedin"><a href="http://www.linkedin.com/groups?gid=1483367" target="_blank" rel="nofollow" title="join yii group at linkedin">LinkedIn</a></li>
					<li class="feeds"><a title="RSS feeds" href="/rss.xml/">RSS Feeds</a></li>
				</ul>
				<div class="clear"></div>
				<a href="/tos/">Terms of Service</a> |
				<a href="/license/">License</a> |
				<a href="/contact/">Contact Us</a><br/>
				Copyright &copy; 2015 by <a href="http://www.yiisoft.com">Yii Software LLC</a>.
				All Rights Reserved.
			</div>
			<div class="clear"></div>
		</div>
	</div>
</div>

    <script type="text/javascript" src="/js/site-20121004195728.js"></script>


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['site._setAccount', 'UA-5843896-1']);
_gaq.push(['site._trackPageview']);

(function() {
	var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<script type="text/javascript">
function trackClick(link, action, category) {
	action=action || link.href;
	category=category || 'Outbound Links';
	try {
		_gaq.push(['site._trackEvent', category, action]);
		setTimeout('document.location = "' + link.href + '"', 250);
	}catch(err){}
	return false;
}
</script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.cookie.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.treeview.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.treeview.async.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.bgiframe.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.dimensions.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.ajaxqueue.js"></script>
<script type="text/javascript" src="/assets/a5450804/jquery.autocomplete.js"></script>
<script type="text/javascript">
/*<![CDATA[*/
jQuery(function($) {
jQuery("#yw0").treeview({'animated':'fast'});
jQuery("#keyword").legacyautocomplete("/api/suggest/",{'minChars':2,'width':'458px','max':100,'scrollHeight':'300px','resultsClass':'ac_results api'}).result(function(event, item) {
			location.href = '/doc/api/1.1/'+item[0].replace(/\(\)/,'').replace(/\./,'#');
		});
});
/*]]>*/
</script>
</body>
</html>
