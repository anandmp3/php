<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    	<meta charset="UTF-8" />
		<meta name="keywords" content="yii framework, tutorial, guide, version 1.1" />
	<meta name="description" content="Yii applications are built upon components which are objects
written to a specification. A component is an instance of
CComponent or its derived class." />
    <link rel="shortcut icon" type="image/x-icon" href="http://static.yiiframework.com/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="http://static.yiiframework.com/css/site-20130404102234.css" />

	<link title="Lives News for Yii Framework" rel="alternate" type="application/rss+xml" href="http://www.yiiframework.com/rss.xml/" />
	<title>Fundamentals: Component | The Definitive Guide to Yii | Yii PHP Framework</title>
	<link rel="search" type="application/opensearchdescription+xml" title="Yii API Search" href="/search-api.xml" />
	<link rel="search" type="application/opensearchdescription+xml" title="Yii Site Search" href="/search-site.xml" />
</head>

<body class="mac">
<div class="layout-main">

	<div class="layout-main-shortcuts">
		<div class="container_12">
            <a style="color:darkred;" href="https://github.com/yiisoft/yii2">Github</a> &middot;
            <a style="color:darkgreen;" href="https://twitter.com/yiiframework">Twitter</a> &middot;
            <a style="color:darkblue;" href="https://www.facebook.com/groups/yiitalk/">Facebook</a> &middot;
            <a href="/doc/guide/">Guide</a> &middot;
            <a href="/doc/api/">Class Reference</a> &middot;
            <a href="/doc-2.0/guide-index.html">Guide 2.0</a> &middot;
            <a href="/doc-2.0/index.html">API 2.0</a> &middot;
            <a href="/wiki/">Wiki</a> &middot;
            <a href="/extensions/">Extensions</a> &middot;
            <a href="/forum/">Forum</a> &middot;
			<a href="/chat/">Live Chat</a> &middot;
                            <a href="/login/">Login</a>            		</div>
	</div>

	<div class="layout-main-bg">
		<div class="layout-main-header">
			<div class="container_12">
				<div class="grid_4">
					<a class="logo" href="/"><img alt="Yii Logo" src="http://static.yiiframework.com/css/img/logo.png" title="Yii Framework" width="284" height="64" /></a>				</div>
				<div class="grid_8 omega">
					<div class="nav">
						<ul class="menu" id="yw0">
<li class="about"><a class="main" href="/about/">About</a>
<ul>
<li><a href="/about/">About Yii</a></li>
<li><a href="/features/">Features</a></li>
<li><a href="/performance/">Performance</a></li>
<li><a href="/license/">License</a></li>
<li class="last"><a href="/contact/">Contact Us</a></li>
</ul>
</li>
<li class="downloads"><a class="main" href="/download/">Downloads</a>
<ul>
<li><a href="/download/">Framework</a></li>
<li><a href="/extensions/">Extensions</a></li>
<li><a href="/demos/">Demos</a></li>
<li class="last"><a href="/logo/">Logo</a></li>
</ul>
</li>
<li class="documentation active"><a class="main" href="/doc/">Documentation</a>
<ul>
<li><a href="/tour/">Take the Tour</a></li>
<li class="active"><a href="/tutorials/">Tutorials</a></li>
<li><a href="/doc/api/">Class Reference</a></li>
<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
<li><a href="/wiki/">Wiki</a></li>
<li><a href="/screencasts/">Screencasts</a></li>
<li class="last"><a href="/resources/">Resources</a></li>
</ul>
</li>
<li class="development"><a class="main" href="https://github.com/yiisoft/yii/commits/master">Development</a>
<ul>
<li><a href="/contribute/">Contribute to Yii</a></li>
<li><a href="https://github.com/yiisoft/yii/commits/master">Latest Updates</a></li>
<li><a href="https://github.com/yiisoft/yii/issues/new">Report a Bug</a></li>
<li class="last"><a href="/security/">Report a Security Issue</a></li>
</ul>
</li>
<li class="community last"><a class="main" href="/community/">Community</a>
<ul>
<li><a href="/forum/">Forum</a></li>
<li><a href="/chat/">Live Chat</a></li>
<li><a href="/news/">News</a></li>
<li><a href="/user/halloffame/">Hall of Fame</a></li>
<li class="last"><a href="/badges/">Badges</a></li>
</ul>
</li>
</ul>						<div class="search">
							<form method="get" action="/search/">
								<div class="keyword">
	                                <input name="q" value="" />
									<a href="#" title="search" class="global-search">search</a>
								</div>
							</form>
						</div>
					</div>
				</div>
				<div class="clear"></div>
			</div>
		</div>

		<div class="container_12">
						<div class="grid_12">
												<div class="layout-main-submenu">
					<ul>
						<li class="main">Documentation</li>
												<li><a href="/tour/">Take the Tour</a></li>
												<li class="active"><a href="/tutorials/">Tutorials</a></li>
												<li><a href="/doc/api/">Class Reference</a></li>
												<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
												<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
												<li><a href="/wiki/">Wiki</a></li>
												<li><a href="/screencasts/">Screencasts</a></li>
												<li><a href="/resources/">Resources</a></li>
											</ul>
				</div>
				
				
				
									<div class="layout-main-body">
						<div class="tutorial-view">
    <div class="grid_3 alpha">
        <div class="nav-toc">
    		<div class="title">The Definitive Guide to Yii</div>
    		<div class="langver">
	            <strong>Language &amp; version</strong>
	    		<div class="languages g-dropdown">
	    		<span>English<i></i></span>
<ul>
<li><a href="/doc/guide/1.1/de/basics.component">Deutsch</a></li>
<li><a href="/doc/guide/1.1/es/basics.component">Español</a></li>
<li><a href="/doc/guide/1.1/fr/basics.component">Français</a></li>
<li><a href="/doc/guide/1.1/he/basics.component">עִבְרִית</a></li>
<li><a href="/doc/guide/1.1/id/basics.component">Bahasa Indonesia</a></li>
<li><a href="/doc/guide/1.1/it/basics.component">Italiano</a></li>
<li><a href="/doc/guide/1.1/ja/basics.component">日本語</a></li>
<li><a href="/doc/guide/1.1/pl/basics.component">Polski</a></li>
<li><a href="/doc/guide/1.1/pt/basics.component">Português</a></li>
<li><a href="/doc/guide/1.1/pt_br/basics.component">Português brasileiro</a></li>
<li><a href="/doc/guide/1.1/ro/basics.component">România</a></li>
<li><a href="/doc/guide/1.1/ru/basics.component">Русский</a></li>
<li><a href="/doc/guide/1.1/sv/basics.component">Svenska</a></li>
<li><a href="/doc/guide/1.1/uk/basics.component">украї́нська</a></li>
<li><a href="/doc/guide/1.1/zh_cn/basics.component">简体中文</a></li>
</ul>
	    		</div>
				<div class="versions g-dropdown">
	    		<span>1.1<i></i></span>
<ul>
<li><a href="/doc/guide/1.0/en/basics.component">1.0</a></li>
</ul>
				</div>
				<div class="clear"></div>
			</div>
            <div class="widget-search-box">
    <form method="get" action="/search/">
        <strong>Search in this tutorial</strong>
		<input type="text" name="q" class="keyword g-text" />
        <input type="hidden" name="type" value="guide" />
        <input type="hidden" name="lang" value="en" />
        <input type="submit" value="Find" class="btn btn-info" />
	</form>
</div>
			<ul class="toc">
						    <li class="chapter"><strong>Getting Started</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/index">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/changes">New Features</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/upgrade">Upgrading from 1.0 to 1.1</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.what-is-yii">What is Yii</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.installation">Installation</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.apache-nginx-config">Apache and Nginx configurations</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.first-app">Creating First Yii Application</a>			            </li>
			        			    						    <li class="chapter"><strong>Fundamentals</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.mvc">Model-View-Controller (MVC)</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.entry">Entry Script</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.application">Application</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.controller">Controller</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.model">Model</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.view">View</a>			            </li>
			        			    			        			            <li class="active">
			                &raquo; Component &laquo;
			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.module">Module</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.namespace">Path Alias and Namespace</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.convention">Conventions</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.workflow">Development Workflow</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.best-practices">Best MVC Practices</a>			            </li>
			        			    						    <li class="chapter"><strong>Working with Forms</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.model">Creating Model</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.action">Creating Action</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.view">Creating Form</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.table">Collecting Tabular Input</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.builder">Using Form Builder</a>			            </li>
			        			    						    <li class="chapter"><strong>Working with Databases</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.dao">Database Access Objects</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.query-builder">Query Builder</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.ar">Active Record</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.arr">Relational Active Record</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.migration">Database Migration</a>			            </li>
			        			    						    <li class="chapter"><strong>Caching</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.data">Data Caching</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.fragment">Fragment Caching</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.page">Page Caching</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.dynamic">Dynamic Content</a>			            </li>
			        			    						    <li class="chapter"><strong>Extending Yii</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.use">Using Extensions</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.create">Creating Extensions</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.integration">Using 3rd-Party Libraries</a>			            </li>
			        			    						    <li class="chapter"><strong>Testing</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.fixture">Defining Fixtures</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.unit">Unit Testing</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.functional">Functional Testing</a>			            </li>
			        			    						    <li class="chapter"><strong>Special Topics</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.gii">Automatic Code Generation</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.url">URL Management</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.auth">Authentication and Authorization</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.theming">Theming and Skin</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.logging">Logging</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.error">Error Handling</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.webservice">Web Service</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.i18n">Internationalization (I18N)</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.prado">Alternative Template Syntax</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.console">Console Applications</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.security">Security</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.performance">Performance Tuning</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.first-app-yiic">Code Generation using Command Line Tools (deprecated)</a>			            </li>
			        			    						</ul>
        </div>
    </div>
    <div class="grid_9 omega">
    	<div class="g-markdown"><h1 id="component">Component</h1>
<div class="google-ad" style="float:right;margin:0 0 1em 1em;">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-3732587985864947";
google_ad_slot = "2830391674";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="toc"><ol><li><a href="#defining-and-using-a-component-property">Defining and using a Component Property</a></li>
<li><a href="#component-event">Component Event</a></li>
<li><a href="#component-behavior">Component Behavior</a></li></ol></div>


<p>Yii applications are built upon components which are objects
written to a specification. A component is an instance of
<a href="/doc/api/1.1/CComponent">CComponent</a> or its derived class. Using a component mainly involves
accessing its properties and raising/handling its events. The base class
<a href="/doc/api/1.1/CComponent">CComponent</a> specifies how to define properties and events.</p>

<h2 id="defining-and-using-a-component-property">1. Defining and using a Component Property <a class="anchor" href="#defining-and-using-a-component-property">¶</a></h2>

<p>A component property is like an object's public member variable. We can
read its value or assign a value to it. For example,</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$width</span><span class="hl-code">=</span><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textWidth</span><span class="hl-code">;     </span><span class="hl-comment">//</span><span class="hl-comment"> get the textWidth property</span>
<span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">enableCaching</span><span class="hl-code">=</span><span class="hl-reserved">true</span><span class="hl-code">;   </span><span class="hl-comment">//</span><span class="hl-comment"> set the enableCaching property</span></pre></div></div>

<p>There are two different ways of defining a component property. First way is
to simply declare a public member variable in the component class like the
following:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">class</span> <span class="hl-identifier">Document</span> <span class="hl-reserved">extends</span> <span class="hl-identifier">CComponent</span>
<span class="hl-brackets">{</span>
    <span class="hl-reserved">public</span> <span class="hl-var">$textWidth</span><span class="hl-code">;
</span><span class="hl-brackets">}</span></pre></div></div>

<p>Another way is to use getters and setters. It is more flexible since additionally
to normal properties you can declare a read only or write only property.</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">class</span> <span class="hl-identifier">Document</span> <span class="hl-reserved">extends</span> <span class="hl-identifier">CComponent</span>
<span class="hl-brackets">{</span>
    <span class="hl-reserved">private</span> <span class="hl-var">$_textWidth</span><span class="hl-code">;
    </span><span class="hl-reserved">protected</span> <span class="hl-var">$_completed</span><span class="hl-code">=</span><span class="hl-reserved">false</span><span class="hl-code">;
 
    </span><span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">getTextWidth</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span>
    <span class="hl-brackets">{</span>
        <span class="hl-reserved">return</span> <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">_textWidth</span><span class="hl-code">;
    </span><span class="hl-brackets">}</span>
 
    <span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">setTextWidth</span><span class="hl-brackets">(</span><span class="hl-var">$value</span><span class="hl-brackets">)</span>
    <span class="hl-brackets">{</span>
        <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">_textWidth</span><span class="hl-code">=</span><span class="hl-var">$value</span><span class="hl-code">;
    </span><span class="hl-brackets">}</span>
 
    <span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">getTextHeight</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span>
    <span class="hl-brackets">{</span>
        <span class="hl-comment">//</span><span class="hl-comment"> calculates and returns text height</span>
    <span class="hl-brackets">}</span>
 
    <span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">setCompleted</span><span class="hl-brackets">(</span><span class="hl-var">$value</span><span class="hl-brackets">)</span>
    <span class="hl-brackets">{</span>
        <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">_completed</span><span class="hl-code">=</span><span class="hl-var">$value</span><span class="hl-code">;
    </span><span class="hl-brackets">}</span>
<span class="hl-brackets">}</span></pre></div></div>

<p>The component above can be used like the following:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$document</span><span class="hl-code">=</span><span class="hl-reserved">new</span> <span class="hl-identifier">Document</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">;
 
</span><span class="hl-comment">//</span><span class="hl-comment"> we can write and read textWidth</span>
<span class="hl-var">$document</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textWidth</span><span class="hl-code">=</span><span class="hl-number">100</span><span class="hl-code">;
</span><span class="hl-reserved">echo</span> <span class="hl-var">$document</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textWidth</span><span class="hl-code">;
 
</span><span class="hl-comment">//</span><span class="hl-comment"> we can only read textHeight</span>
<span class="hl-reserved">echo</span> <span class="hl-var">$document</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textHeight</span><span class="hl-code">;
 
</span><span class="hl-comment">//</span><span class="hl-comment"> we can only write completed</span>
<span class="hl-var">$document</span><span class="hl-code">-&gt;</span><span class="hl-identifier">completed</span><span class="hl-code">=</span><span class="hl-reserved">true</span><span class="hl-code">;</span></pre></div></div>

<p>When trying to read a component property and the property isn't defined as a
public class member, Yii is trying to use a getter method i.e. for <code>textWidth</code>
a getter method will be <code>getTextWidth</code>. Same thing happens when trying to write a
property not defined as a public class member.</p>

<p>If there's a getter method but no setter method the component property becomes
read only and throws an exception if we're trying to write it. If it's the
other way around, the property is write-only.</p>

<p>Using getter and setter methods to define a property has the
benefit that additional logic (e.g. performing validation, raising events)
can be executed when reading and writing the property.</p>

<blockquote class="note">
<p><strong>Note:</strong> There is a slight difference between a property defined via getter/setter
  methods and a class member variable. The name of the former
  is case-insensitive while the latter is case-sensitive.</p>
</blockquote>

<h2 id="component-event">2. Component Event <a class="anchor" href="#component-event">¶</a></h2>

<p>Component events are special properties that take methods (called <code>event
handlers</code>) as their values. Attaching (assigning) a method to an event will
cause the method to be invoked automatically at the places where the event
is raised. Therefore, the behavior of a component can be modified in a way
that may not be foreseen during the development of the component.</p>

<p>A component event is defined by defining a method whose name starts with
<code>on</code>. Like property names defined via getter/setter methods, event names are
case-insensitive. The following code defines an <code>onClicked</code> event:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">onClicked</span><span class="hl-brackets">(</span><span class="hl-var">$event</span><span class="hl-brackets">)</span>
<span class="hl-brackets">{</span>
    <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">raiseEvent</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">onClicked</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-var">$event</span><span class="hl-brackets">)</span><span class="hl-code">;
</span><span class="hl-brackets">}</span></pre></div></div>

<p>where <code>$event</code> is an instance of <a href="/doc/api/1.1/CEvent">CEvent</a> or its child class representing
the event parameter.</p>

<p>We can attach a method to this event as follows:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">onClicked</span><span class="hl-code">=</span><span class="hl-var">$callback</span><span class="hl-code">;</span></pre></div></div>

<p>where <code>$callback</code> refers to a valid PHP callback. It can be a global
function or a class method. If the latter, the callback must be given as an
array: <code>array($object,'methodName')</code>.</p>

<p>The signature of an event handler must be as follows:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">function</span> <span class="hl-identifier">methodName</span><span class="hl-brackets">(</span><span class="hl-var">$event</span><span class="hl-brackets">)</span>
<span class="hl-brackets">{</span><span class="hl-code">
    ......
</span><span class="hl-brackets">}</span></pre></div></div>

<p>where <code>$event</code> is the parameter describing the event (it originates from
the <code>raiseEvent()</code> call). The <code>$event</code> parameter is an instance of <a href="/doc/api/1.1/CEvent">CEvent</a> or
its derived class. At the minimum, it contains the information about who
raises the event.</p>

<p>An event handler can also be an anonymous function which is supported by PHP 5.3 or above. For example,</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">onClicked</span><span class="hl-code">=</span><span class="hl-reserved">function</span><span class="hl-brackets">(</span><span class="hl-var">$event</span><span class="hl-brackets">)</span> <span class="hl-brackets">{</span><span class="hl-code">
    ......
</span><span class="hl-brackets">}</span></pre></div></div>

<p>If we call <code>onClicked()</code> now, the <code>onClicked</code> event will be raised (inside
<code>onClicked()</code>), and the attached event handler will be invoked
automatically.</p>

<p>An event can be attached with multiple handlers. When the event is raised,
the handlers will be invoked in the order that they are attached to the event.
If a handler decides to prevent the rest of the handlers from being invoked, it can set
<a href="/doc/api/1.1/CEvent#handled">$event->handled</a> to be true.</p>

<h2 id="component-behavior">3. Component Behavior <a class="anchor" href="#component-behavior">¶</a></h2>

<p>A component supports the <a href="http://en.wikipedia.org/wiki/Mixin">mixin</a> pattern
and can be attached with one or several behaviors. A <em>behavior</em> is an object
whose methods can be 'inherited' by its attached component through the means of collecting
functionality instead of specialization (i.e., normal class inheritance).
A component can be attached with several behaviors and thus achieve 'multiple inheritance'.</p>

<p>Behavior classes must implement the <a href="/doc/api/1.1/IBehavior">IBehavior</a> interface. Most behaviors can
extend from the <a href="/doc/api/1.1/CBehavior">CBehavior</a> base class. If a behavior needs to be attached to
a <a href="/doc/guide/1.1/en/basics.model">model</a>, it may also extend from <a href="/doc/api/1.1/CModelBehavior">CModelBehavior</a> or
<a href="/doc/api/1.1/CActiveRecordBehavior">CActiveRecordBehavior</a> which implements additional features specific for models.</p>

<p>To use a behavior, it must be attached to a component first by calling the behavior's
<a href="/doc/api/1.1/IBehavior#attach">attach()</a> method. Then we can call a behavior method via the component:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-comment">//</span><span class="hl-comment"> $name uniquely identifies the behavior in the component</span>
<span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">attachBehavior</span><span class="hl-brackets">(</span><span class="hl-var">$name</span><span class="hl-code">,</span><span class="hl-var">$behavior</span><span class="hl-brackets">)</span><span class="hl-code">;
</span><span class="hl-comment">//</span><span class="hl-comment"> test() is a method of $behavior</span>
<span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>An attached behavior can be accessed like a normal property of the component.
For example, if a behavior named <code>tree</code> is attached to a component, we can
obtain the reference to this behavior object using:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$behavior</span><span class="hl-code">=</span><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">tree</span><span class="hl-code">;
</span><span class="hl-comment">//</span><span class="hl-comment"> equivalent to the following:</span>
<span class="hl-comment">//</span><span class="hl-comment"> $behavior=$component-&gt;asa('tree');</span></pre></div></div>

<p>A behavior can be temporarily disabled so that its methods are not available via the component.
For example,</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">disableBehavior</span><span class="hl-brackets">(</span><span class="hl-var">$name</span><span class="hl-brackets">)</span><span class="hl-code">;
</span><span class="hl-comment">//</span><span class="hl-comment"> the following statement will throw an exception</span>
<span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">;
</span><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">enableBehavior</span><span class="hl-brackets">(</span><span class="hl-var">$name</span><span class="hl-brackets">)</span><span class="hl-code">;
</span><span class="hl-comment">//</span><span class="hl-comment"> it works now</span>
<span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>It is possible that two behaviors attached to the same component have methods of the same name.
In this case, the method of the first attached behavior will take precedence.</p>

<p>When used together with <a href="/doc/guide/1.1/en/basics.component#component-event">events</a>, behaviors are even more powerful.
A behavior, when being attached to a component, can attach some of its methods to some events
of the component. By doing so, the behavior gets a chance to observe or change the normal
execution flow of the component.</p>

<p>A behavior's properties can also be accessed via the component it
is attached to. The properties include both the public member variables and the properties defined
via getters and/or setters of the behavior. For example, if a behavior has a property named <code>xyz</code>
and the behavior is attached to a component <code>$a</code>. Then we can use the expression <code>$a-&gt;xyz</code> to access
the behavior's property.</p>

<div class="revision"><div class="google-ad" style="margin:-60px 0 5px 200px;">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-3732587985864947";
google_ad_slot = "7116172008";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>$Id$</div>
</div>
                <div class="prev-next-nav">
                            <div class="prev-topic"><a href="/doc/guide/1.1/en/basics.view">View</a></div>
                                        <div class="next-topic"><a href="/doc/guide/1.1/en/basics.module">Module</a></div>
                    </div>
        
		        <div class="widget-comment-list" id="comments">
	<div class="comments">
		<h3>Total 5 comments</h3>
				<div class="comment alt-0">
			<a class="cid" id="c5691" title="permalink to this comment" href="#c5691">#5691</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=5691"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=5691&amp;vote=1"><span>2</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=5691&amp;vote=0"><span>0</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/10821/">pligor</a> at 2011/11/02 05:10am</div>
			<div class="title">variable precedence using behaviors</div>
			<div class="content"><p>if an attribute $var is defined both in behavior and model, model's value takes precedence
For example if inside model $var=100; and inside behavior $var=50
then $this-&gt;var returns 100</p>
</div>
					</div>
				<div class="comment alt-1">
			<a class="cid" id="c5406" title="permalink to this comment" href="#c5406">#5406</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=5406"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=5406&amp;vote=1"><span>2</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=5406&amp;vote=0"><span>0</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/10821/">pligor</a> at 2011/10/10 06:49am</div>
			<div class="title">method_exists</div>
			<div class="content"><p>Note: some functions like method_exists will NOT return true for behavior's methods</p>
</div>
					</div>
				<div class="comment alt-0">
			<a class="cid" id="c3900" title="permalink to this comment" href="#c3900">#3900</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=3900"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=3900&amp;vote=1"><span>6</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=3900&amp;vote=0"><span>0</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/24335/">Dom y Nick</a> at 2011/05/19 06:18am</div>
			<div class="title">Correction to &quot;Virtual properties differences&quot;</div>
			<div class="content"><p>There is a slight inaccuracy in KJedi's post #1909</p>

<p>You <strong>Can</strong> actually use <strong>isset()</strong> on a virtual property, as long as the class properly overloads its behaviour via its private <strong>__isset(<em>string</em>)</strong> member function (see PHP manual for explanations).
And this is actually exactly what the CComponent class does. 
So, the only thing you can't actually do with virtual properties is check them with <strong>empty()</strong>; and if you check them with <strong>property_exists(<em>class</em>,<em>property</em>)</strong> the return value will be <strong>FALSE</strong>...</p>
</div>
					</div>
				<div class="comment alt-1">
			<a class="cid" id="c226" title="permalink to this comment" href="#c226">#226</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=226"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=226&amp;vote=1"><span>4</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=226&amp;vote=0"><span>0</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/6221/">Bruce Lee</a> at 2010/08/04 05:54pm</div>
			<div class="title">Abstract examples ...</div>
			<div class="content"><p>in order to resolve any problem, mathematicians decompose this problem into several smaller problems, because they are more easy to understand and to resolve step by step. Ecquivalent of this math example is our project, which can be decompose also into several modules, but modules can be decompose into several smaller subsystems, which are named components. By this algorithm of decomposition we can easy and efficiently maintain any kind of scaled projects. I hope this description will help you to clearly imagine this easy way.</p>

<p>http://www.yiiframework.com/doc/guide/basics.module
A module is a self-contained software unit that consists of models, views, controllers and other supporting components. In many aspects, a module resembles to an application.</p>

<p>P.S.: sorry for my bad english.</p>
</div>
					</div>
				<div class="comment alt-0">
			<a class="cid" id="c1909" title="permalink to this comment" href="#c1909">#1909</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=1909"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=1909&amp;vote=1"><span>9</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=1909&amp;vote=0"><span>1</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/46/">KJedi</a> at 2008/12/17 07:13am</div>
			<div class="title">Virtual properties differences </div>
			<div class="content"><p>There is one thing you should remember when defining virtual property using getter and setter like in example with <code>textWidth</code>.</p>

<p>You'll be able to write</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textWidth</span><span class="hl-code"> = </span><span class="hl-var">$width</span></pre></div></div>

<p>and</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$width</span><span class="hl-code"> = </span><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textWidth</span></pre></div></div>

<p>But you <strong>can't</strong> use it in construction like <code>empty()</code> or <code>isset()</code>. Why? Reason is simple. Both functions require a <strong>variable</strong>, and writing</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$component</span><span class="hl-code">-&gt;</span><span class="hl-identifier">textWidth</span><span class="hl-code">;</span></pre></div></div>

<p>you're calling your</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">getTextWidth</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span>
<span class="hl-brackets">{</span>
    <span class="hl-reserved">return</span> <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">_textWidth</span><span class="hl-code">;
</span><span class="hl-brackets">}</span></pre></div></div>

<p>So this is not a variable, this is result of function call! You can't pass it by reference, can't get or change it's name (like for normal variable):</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$a</span><span class="hl-code"> = $</span><span class="hl-var">$abc</span><span class="hl-code">;</span><span class="hl-comment">//</span><span class="hl-comment">$a now holds a string abc</span><span class="hl-code">
$</span><span class="hl-var">$abc</span><span class="hl-code"> = </span><span class="hl-quotes">'</span><span class="hl-string">a</span><span class="hl-quotes">'</span><span class="hl-code">;</span><span class="hl-comment">//</span><span class="hl-comment">now we can write $a and it is the same as $abc was. </span>
<span class="hl-comment">//</span><span class="hl-comment"> It's not the reference, just changed the variable name.</span></pre></div></div>

<p>Please note the main thing - virtual properties are not variables, and write your code understanding this.
Good luck!</p>
</div>
					</div>
			</div>
	<div id="comment-add">
		<h3 id="add-comment">Leave a comment</h3>

			<p>Please <a class="g-login" rel="/doc/guide/1.1/en/basics.component#add-comment" href="#">login</a> to leave your comment.</p>
		</div>
</div>
           </div>
</div>
					</div>
				
								<div class="clear"></div>
			</div>
			<div class="clear"></div>
					</div>
	</div>

	<div class="layout-main-footer">
		<div class="container_12">
			<div class="grid_6">
				<ul class="menu">
				<li class="main">About
<ul class="sub">
<li><a href="/about/">About Yii</a></li>
<li><a href="/features/">Features</a></li>
<li><a href="/performance/">Performance</a></li>
<li><a href="/license/">License</a></li>
<li><a href="/contact/">Contact Us</a></li>
</ul>
</li>
<li class="main">Downloads
<ul class="sub">
<li><a href="/download/">Framework</a></li>
<li><a href="/extensions/">Extensions</a></li>
<li><a href="/demos/">Demos</a></li>
<li><a href="/logo/">Logo</a></li>
</ul>
</li>
<li class="main">Documentation
<ul class="sub">
<li><a href="/tour/">Take the Tour</a></li>
<li><a href="/tutorials/">Tutorials</a></li>
<li><a href="/doc/api/">Class Reference</a></li>
<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
<li><a href="/wiki/">Wiki</a></li>
<li><a href="/screencasts/">Screencasts</a></li>
<li><a href="/resources/">Resources</a></li>
</ul>
</li>
<li class="main">Development
<ul class="sub">
<li><a href="/contribute/">Contribute to Yii</a></li>
<li><a href="https://github.com/yiisoft/yii/commits/master">Latest Updates</a></li>
<li><a href="https://github.com/yiisoft/yii/issues/new">Report a Bug</a></li>
<li><a href="/security/">Report a Security Issue</a></li>
</ul>
</li>
<li class="main">Community
<ul class="sub">
<li><a href="/forum/">Forum</a></li>
<li><a href="/chat/">Live Chat</a></li>
<li><a href="/news/">News</a></li>
<li><a href="/user/halloffame/">Hall of Fame</a></li>
<li><a href="/badges/">Badges</a></li>
</ul>
</li>
				</ul>
			</div>
			<div class="grid_1">&nbsp;</div>
			<div class="grid_5">
				<h3>Yii Supporters</h3>
				<ul class="g-list-none supporters">

				</ul>
			</div>

			<div class="clear"></div>
			<div class="grid_12 copyright">
				<ul class="social">
					<li class="twitter"><a href="https://twitter.com/yiiframework" target="_blank" rel="nofollow" title="follow us on twitter">Twitter</a></li>
					<li class="facebook"><a href="https://www.facebook.com/groups/yiitalk/" target="_blank" rel="nofollow" title="join yii group at facebook">Facebook</a></li>
					<li class="linkedin"><a href="http://www.linkedin.com/groups?gid=1483367" target="_blank" rel="nofollow" title="join yii group at linkedin">LinkedIn</a></li>
					<li class="feeds"><a title="RSS feeds" href="/rss.xml/">RSS Feeds</a></li>
				</ul>
				<div class="clear"></div>
				<a href="/tos/">Terms of Service</a> |
				<a href="/license/">License</a> |
				<a href="/contact/">Contact Us</a><br/>
				Copyright &copy; 2015 by <a href="http://www.yiisoft.com">Yii Software LLC</a>.
				All Rights Reserved.
			</div>
			<div class="clear"></div>
		</div>
	</div>
</div>

    <script type="text/javascript" src="/js/site-20121004195728.js"></script>


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['site._setAccount', 'UA-5843896-1']);
_gaq.push(['site._trackPageview']);

(function() {
	var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<script type="text/javascript">
function trackClick(link, action, category) {
	action=action || link.href;
	category=category || 'Outbound Links';
	try {
		_gaq.push(['site._trackEvent', category, action]);
		setTimeout('document.location = "' + link.href + '"', 250);
	}catch(err){}
	return false;
}
</script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
</body>
</html>
