<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    	<meta charset="UTF-8" />
		<meta name="keywords" content="yii framework, tutorial, guide, version 1.1" />
	<meta name="description" content="Theming is a systematic way of customizing the outlook of pages in a Web
application. By applying a new theme, the overall appearance of a Web
application can be changed instantly and dramatically." />
    <link rel="shortcut icon" type="image/x-icon" href="http://static.yiiframework.com/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="http://static.yiiframework.com/css/site-20130404102234.css" />

	<link title="Lives News for Yii Framework" rel="alternate" type="application/rss+xml" href="http://www.yiiframework.com/rss.xml/" />
	<title>Special Topics: Theming and Skin | The Definitive Guide to Yii | Yii PHP Framework</title>
	<link rel="search" type="application/opensearchdescription+xml" title="Yii API Search" href="/search-api.xml" />
	<link rel="search" type="application/opensearchdescription+xml" title="Yii Site Search" href="/search-site.xml" />
</head>

<body class="mac">
<div class="layout-main">

	<div class="layout-main-shortcuts">
		<div class="container_12">
            <a style="color:darkred;" href="https://github.com/yiisoft/yii2">Github</a> &middot;
            <a style="color:darkgreen;" href="https://twitter.com/yiiframework">Twitter</a> &middot;
            <a style="color:darkblue;" href="https://www.facebook.com/groups/yiitalk/">Facebook</a> &middot;
            <a href="/doc/guide/">Guide</a> &middot;
            <a href="/doc/api/">Class Reference</a> &middot;
            <a href="/doc-2.0/guide-index.html">Guide 2.0</a> &middot;
            <a href="/doc-2.0/index.html">API 2.0</a> &middot;
            <a href="/wiki/">Wiki</a> &middot;
            <a href="/extensions/">Extensions</a> &middot;
            <a href="/forum/">Forum</a> &middot;
			<a href="/chat/">Live Chat</a> &middot;
                            <a href="/login/">Login</a>            		</div>
	</div>

	<div class="layout-main-bg">
		<div class="layout-main-header">
			<div class="container_12">
				<div class="grid_4">
					<a class="logo" href="/"><img alt="Yii Logo" src="http://static.yiiframework.com/css/img/logo.png" title="Yii Framework" width="284" height="64" /></a>				</div>
				<div class="grid_8 omega">
					<div class="nav">
						<ul class="menu" id="yw0">
<li class="about"><a class="main" href="/about/">About</a>
<ul>
<li><a href="/about/">About Yii</a></li>
<li><a href="/features/">Features</a></li>
<li><a href="/performance/">Performance</a></li>
<li><a href="/license/">License</a></li>
<li class="last"><a href="/contact/">Contact Us</a></li>
</ul>
</li>
<li class="downloads"><a class="main" href="/download/">Downloads</a>
<ul>
<li><a href="/download/">Framework</a></li>
<li><a href="/extensions/">Extensions</a></li>
<li><a href="/demos/">Demos</a></li>
<li class="last"><a href="/logo/">Logo</a></li>
</ul>
</li>
<li class="documentation active"><a class="main" href="/doc/">Documentation</a>
<ul>
<li><a href="/tour/">Take the Tour</a></li>
<li class="active"><a href="/tutorials/">Tutorials</a></li>
<li><a href="/doc/api/">Class Reference</a></li>
<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
<li><a href="/wiki/">Wiki</a></li>
<li><a href="/screencasts/">Screencasts</a></li>
<li class="last"><a href="/resources/">Resources</a></li>
</ul>
</li>
<li class="development"><a class="main" href="https://github.com/yiisoft/yii/commits/master">Development</a>
<ul>
<li><a href="/contribute/">Contribute to Yii</a></li>
<li><a href="https://github.com/yiisoft/yii/commits/master">Latest Updates</a></li>
<li><a href="https://github.com/yiisoft/yii/issues/new">Report a Bug</a></li>
<li class="last"><a href="/security/">Report a Security Issue</a></li>
</ul>
</li>
<li class="community last"><a class="main" href="/community/">Community</a>
<ul>
<li><a href="/forum/">Forum</a></li>
<li><a href="/chat/">Live Chat</a></li>
<li><a href="/news/">News</a></li>
<li><a href="/user/halloffame/">Hall of Fame</a></li>
<li class="last"><a href="/badges/">Badges</a></li>
</ul>
</li>
</ul>						<div class="search">
							<form method="get" action="/search/">
								<div class="keyword">
	                                <input name="q" value="" />
									<a href="#" title="search" class="global-search">search</a>
								</div>
							</form>
						</div>
					</div>
				</div>
				<div class="clear"></div>
			</div>
		</div>

		<div class="container_12">
						<div class="grid_12">
												<div class="layout-main-submenu">
					<ul>
						<li class="main">Documentation</li>
												<li><a href="/tour/">Take the Tour</a></li>
												<li class="active"><a href="/tutorials/">Tutorials</a></li>
												<li><a href="/doc/api/">Class Reference</a></li>
												<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
												<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
												<li><a href="/wiki/">Wiki</a></li>
												<li><a href="/screencasts/">Screencasts</a></li>
												<li><a href="/resources/">Resources</a></li>
											</ul>
				</div>
				
				
				
									<div class="layout-main-body">
						<div class="tutorial-view">
    <div class="grid_3 alpha">
        <div class="nav-toc">
    		<div class="title">The Definitive Guide to Yii</div>
    		<div class="langver">
	            <strong>Language &amp; version</strong>
	    		<div class="languages g-dropdown">
	    		<span>English<i></i></span>
<ul>
<li><a href="/doc/guide/1.1/de/topics.theming">Deutsch</a></li>
<li><a href="/doc/guide/1.1/es/topics.theming">Español</a></li>
<li><a href="/doc/guide/1.1/fr/topics.theming">Français</a></li>
<li><a href="/doc/guide/1.1/he/topics.theming">עִבְרִית</a></li>
<li><a href="/doc/guide/1.1/id/topics.theming">Bahasa Indonesia</a></li>
<li><a href="/doc/guide/1.1/it/topics.theming">Italiano</a></li>
<li><a href="/doc/guide/1.1/ja/topics.theming">日本語</a></li>
<li><a href="/doc/guide/1.1/pl/topics.theming">Polski</a></li>
<li><a href="/doc/guide/1.1/pt/topics.theming">Português</a></li>
<li><a href="/doc/guide/1.1/pt_br/topics.theming">Português brasileiro</a></li>
<li><a href="/doc/guide/1.1/ro/topics.theming">România</a></li>
<li><a href="/doc/guide/1.1/ru/topics.theming">Русский</a></li>
<li><a href="/doc/guide/1.1/sv/topics.theming">Svenska</a></li>
<li><a href="/doc/guide/1.1/uk/topics.theming">украї́нська</a></li>
<li><a href="/doc/guide/1.1/zh_cn/topics.theming">简体中文</a></li>
</ul>
	    		</div>
				<div class="versions g-dropdown">
	    		<span>1.1<i></i></span>
<ul>
<li><a href="/doc/guide/1.0/en/topics.theming">1.0</a></li>
</ul>
				</div>
				<div class="clear"></div>
			</div>
            <div class="widget-search-box">
    <form method="get" action="/search/">
        <strong>Search in this tutorial</strong>
		<input type="text" name="q" class="keyword g-text" />
        <input type="hidden" name="type" value="guide" />
        <input type="hidden" name="lang" value="en" />
        <input type="submit" value="Find" class="btn btn-info" />
	</form>
</div>
			<ul class="toc">
						    <li class="chapter"><strong>Getting Started</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/index">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/changes">New Features</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/upgrade">Upgrading from 1.0 to 1.1</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.what-is-yii">What is Yii</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.installation">Installation</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.apache-nginx-config">Apache and Nginx configurations</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.first-app">Creating First Yii Application</a>			            </li>
			        			    						    <li class="chapter"><strong>Fundamentals</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.mvc">Model-View-Controller (MVC)</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.entry">Entry Script</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.application">Application</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.controller">Controller</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.model">Model</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.view">View</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.component">Component</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.module">Module</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.namespace">Path Alias and Namespace</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.convention">Conventions</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.workflow">Development Workflow</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/basics.best-practices">Best MVC Practices</a>			            </li>
			        			    						    <li class="chapter"><strong>Working with Forms</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.model">Creating Model</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.action">Creating Action</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.view">Creating Form</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.table">Collecting Tabular Input</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/form.builder">Using Form Builder</a>			            </li>
			        			    						    <li class="chapter"><strong>Working with Databases</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.dao">Database Access Objects</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.query-builder">Query Builder</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.ar">Active Record</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.arr">Relational Active Record</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/database.migration">Database Migration</a>			            </li>
			        			    						    <li class="chapter"><strong>Caching</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.data">Data Caching</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.fragment">Fragment Caching</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.page">Page Caching</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/caching.dynamic">Dynamic Content</a>			            </li>
			        			    						    <li class="chapter"><strong>Extending Yii</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.use">Using Extensions</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.create">Creating Extensions</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/extension.integration">Using 3rd-Party Libraries</a>			            </li>
			        			    						    <li class="chapter"><strong>Testing</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.overview">Overview</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.fixture">Defining Fixtures</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.unit">Unit Testing</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/test.functional">Functional Testing</a>			            </li>
			        			    						    <li class="chapter"><strong>Special Topics</strong></li>
			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.gii">Automatic Code Generation</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.url">URL Management</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.auth">Authentication and Authorization</a>			            </li>
			        			    			        			            <li class="active">
			                &raquo; Theming and Skin &laquo;
			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.logging">Logging</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.error">Error Handling</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.webservice">Web Service</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.i18n">Internationalization (I18N)</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.prado">Alternative Template Syntax</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.console">Console Applications</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.security">Security</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/topics.performance">Performance Tuning</a>			            </li>
			        			    			        			            <li>
			                <a href="/doc/guide/1.1/en/quickstart.first-app-yiic">Code Generation using Command Line Tools (deprecated)</a>			            </li>
			        			    						</ul>
        </div>
    </div>
    <div class="grid_9 omega">
    	<div class="g-markdown"><h1 id="theming">Theming</h1>
<div class="google-ad" style="float:right;margin:0 0 1em 1em;">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-3732587985864947";
google_ad_slot = "2830391674";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="toc"><ol><li><a href="#using-a-theme">Using a Theme</a></li>
<li><a href="#creating-a-theme">Creating a Theme</a></li>
<li><a href="#theming-widgets">Theming Widgets</a></li>
<li><a href="#customizing-widgets-globally">Customizing Widgets Globally</a></li>
<li><a href="#skin">Skin</a></li></ol></div>


<p>Theming is a systematic way of customizing the outlook of pages in a Web
application. By applying a new theme, the overall appearance of a Web
application can be changed instantly and dramatically.</p>

<p>In Yii, each theme is represented as a directory consisting of view files,
layout files, and relevant resource files such as images, CSS files,
JavaScript files, etc.  The name of a theme is its directory name. All
themes reside under the same directory <code>WebRoot/themes</code>. At any time, only
one theme can be active.</p>

<blockquote class="tip">
<p><strong>Tip:</strong> The default theme root directory <code>WebRoot/themes</code> can be configured
  to be a different one. Simply configure the
  <a href="/doc/api/1.1/CThemeManager#basePath">basePath</a> and the <a href="/doc/api/1.1/CThemeManager#baseUrl">baseUrl</a>
  properties of the <a href="/doc/api/1.1/CWebApplication#themeManager">themeManager</a> application
  component to be the desired ones.</p>
</blockquote>

<h2 id="using-a-theme">1. Using a Theme <a class="anchor" href="#using-a-theme">¶</a></h2>

<p>To activate a theme, set the <a href="/doc/api/1.1/CWebApplication#theme">theme</a> property of
the Web application to be the name of the desired theme. This can be done
either in the <a href="/doc/guide/1.1/en/basics.application#application-configuration">application
configuration</a> or during runtime in
controller actions.</p>

<blockquote class="note">
<p><strong>Note:</strong> Theme name is case-sensitive. If you attempt to activate a theme
  that does not exist, <code>Yii::app()-&gt;theme</code> will return <code>null</code>.</p>
</blockquote>

<h2 id="creating-a-theme">2. Creating a Theme <a class="anchor" href="#creating-a-theme">¶</a></h2>

<p>Contents under a theme directory should be organized in the same way as
those under the <a href="/doc/guide/1.1/en/basics.application#application-base-directory">application base
path</a>. For example, all view files
must be located under <code>views</code>, layout view files under <code>views/layouts</code>, and
system view files under <code>views/system</code>. For example, if we want to replace
the <code>create</code> view of <code>PostController</code> with a view in the <code>classic</code> theme,
we should save the new view file as <code>WebRoot/themes/classic/views/post/create.php</code>.</p>

<p>For views belonging to controllers in a <a href="/doc/guide/1.1/en/basics.module">module</a>,
the corresponding themed view files should also be placed under the <code>views</code>
directory. For example, if the aforementioned <code>PostController</code> is in a module
named <code>forum</code>, we should save the <code>create</code> view file as <code>WebRoot/themes/classic/views/forum/post/create.php</code>. If the <code>forum</code> module
is nested in another module named <code>support</code>, then the view file should be
<code>WebRoot/themes/classic/views/support/forum/post/create.php</code>.</p>

<blockquote class="note">
<p><strong>Note:</strong> Because the <code>views</code> directory may contain security-sensitive data, it should be configured to prevent from being accessed by Web users.</p>
</blockquote>

<p>When we call <a href="/doc/api/1.1/CController#render">render</a> or
<a href="/doc/api/1.1/CController#renderPartial">renderPartial</a> to display a view, the
corresponding view file as well as the layout file will be looked for in
the currently active theme. And if found, those files will be rendered.
Otherwise, it falls back to the default location as specified by
<a href="/doc/api/1.1/CController#viewPath">viewPath</a> and
<a href="/doc/api/1.1/CWebApplication#layoutPath">layoutPath</a>.</p>

<blockquote class="tip">
<p><strong>Tip:</strong> Inside a theme view, we often need to link other theme resource
  files. For example, we may want to show an image file under the theme's
  <code>images</code> directory. Using the <a href="/doc/api/1.1/CTheme#baseUrl">baseUrl</a> property of the
  currently active theme, we can generate the URL for the image as follows,</p>
  
  <div class="hl-code"><div class="hl-main"><pre><span class="hl-identifier">Yii</span><span class="hl-code">::</span><span class="hl-identifier">app</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">-&gt;</span><span class="hl-identifier">theme</span><span class="hl-code">-&gt;</span><span class="hl-identifier">baseUrl</span><span class="hl-code"> . </span><span class="hl-quotes">'</span><span class="hl-string">/images/FileName.gif</span><span class="hl-quotes">'</span></pre></div></div>
</blockquote>

<p>Below is an example of directory organization for an application with two themes <code>basic</code> and <code>fancy</code>.</p>

<pre>WebRoot/
    assets
    protected/
        .htaccess
        components/
        controllers/
        models/
        views/
            layouts/
                main.php
            site/
                index.php
    themes/
        basic/
            views/
                .htaccess
                layouts/
                    main.php
                site/
                    index.php
        fancy/
            views/
                .htaccess
                layouts/
                    main.php
                site/
                    index.php
</pre>

<p>In the application configuration, if we configure</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">return</span> <span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">theme</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">basic</span><span class="hl-quotes">'</span><span class="hl-code">,
    ......
</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>then the <code>basic</code> theme will be in effect, which means the application's layout will use
the one under the directory <code>themes/basic/views/layouts</code>, and the site's index view will
use the one under <code>themes/basic/views/site</code>. In case a view file is not found in the theme,
it will fall back to the one under the <code>protected/views</code> directory.</p>

<h2 id="theming-widgets">3. Theming Widgets <a class="anchor" href="#theming-widgets">¶</a></h2>

<p>Starting from version 1.1.5, views used by a widget can also be themed. In particular, when we call <a href="/doc/api/1.1/CWidget#render">CWidget::render()</a> to render a widget view, Yii will attempt to search under the theme folder as well as the widget view folder for the desired view file.</p>

<p>To theme the view <code>xyz</code> for a widget whose class name is <code>Foo</code>, we should first create a folder named <code>Foo</code> (same as the widget class name) under the currently active theme's view folder. If the widget class is namespaced (available in PHP 5.3.0 or above), such as <code>\app\widgets\Foo</code>, we should create a folder named <code>app_widgets_Foo</code>. That is, we replace the namespace separators with the underscore characters.</p>

<p>We then create a view file named <code>xyz.php</code> under the newly created folder. To this end, we should have a file <code>themes/basic/views/Foo/xyz.php</code>, which will be used by the widget to replace its original view, if the currently active theme is <code>basic</code>.</p>

<h2 id="customizing-widgets-globally">4. Customizing Widgets Globally <a class="anchor" href="#customizing-widgets-globally">¶</a></h2>

<blockquote class="note">
<p><strong>Note:</strong> this feature has been available since version 1.1.3.</p>
</blockquote>

<p>When using a widget provided by third party or Yii, we often need to customize
it for specific needs. For example, we may want to change the value of
<a href="/doc/api/1.1/CLinkPager#maxButtonCount">CLinkPager::maxButtonCount</a> from 10 (default) to 5. We can accomplish this
by passing the initial property values when calling <a href="/doc/api/1.1/CBaseController#widget">CBaseController::widget</a>
to create a widget. However, it becomes troublesome to do so if we have to
repeat the same customization in every place we use <a href="/doc/api/1.1/CLinkPager">CLinkPager</a>.</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">widget</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">pages</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-var">$pagination</span><span class="hl-code">,
    </span><span class="hl-quotes">'</span><span class="hl-string">maxButtonCount</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-number">5</span><span class="hl-code">,
    </span><span class="hl-quotes">'</span><span class="hl-string">cssFile</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">false</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>Using the global widget customization feature, we only need to specify these
initial values in a single place, i.e., the application configuration. This
makes the customization of widgets more manageable.</p>

<p>To use the global widget customization feature, we need to configure the
<a href="/doc/api/1.1/CWebApplication#widgetFactory">widgetFactory</a> as follows:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">return</span> <span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">components</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
        <span class="hl-quotes">'</span><span class="hl-string">widgetFactory</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
            <span class="hl-quotes">'</span><span class="hl-string">widgets</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
                <span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
                    <span class="hl-quotes">'</span><span class="hl-string">maxButtonCount</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-number">5</span><span class="hl-code">,
                    </span><span class="hl-quotes">'</span><span class="hl-string">cssFile</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">false</span><span class="hl-code">,
                </span><span class="hl-brackets">)</span><span class="hl-code">,
                </span><span class="hl-quotes">'</span><span class="hl-string">CJuiDatePicker</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
                    <span class="hl-quotes">'</span><span class="hl-string">language</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">ru</span><span class="hl-quotes">'</span><span class="hl-code">,
                </span><span class="hl-brackets">)</span><span class="hl-code">,
            </span><span class="hl-brackets">)</span><span class="hl-code">,
        </span><span class="hl-brackets">)</span><span class="hl-code">,
    </span><span class="hl-brackets">)</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>In the above, we specify the global widget customization for both <a href="/doc/api/1.1/CLinkPager">CLinkPager</a>
and <a href="/doc/api/1.1/CJuiDatePicker">CJuiDatePicker</a> widgets by configuring the <a href="/doc/api/1.1/CWidgetFactory#widgets">CWidgetFactory::widgets</a>
property. Note that the global customization for each widget is represented
as a key-value pair in the array, where the key refers to the wiget class
name while the value specifies the initial property value array.</p>

<p>Now, whenever we create a <a href="/doc/api/1.1/CLinkPager">CLinkPager</a> widget in a view, the above property
values will be assigned to the widget, and we only need to write the following
code in the view to create the widget:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">widget</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">pages</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-var">$pagination</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>We can still override the initial property values when necessary. For example,
if in some view we want to set <code>maxButtonCount</code> to be 2, we can do the following:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">widget</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">pages</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-var">$pagination</span><span class="hl-code">,
    </span><span class="hl-quotes">'</span><span class="hl-string">maxButtonCount</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-number">2</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<h2 id="skin">5. Skin <a class="anchor" href="#skin">¶</a></h2>

<p>While using a theme we can quickly change the outlook of views, we can use skins to systematically customize the outlook of the <a href="/doc/guide/1.1/en/basics.view#widget">widgets</a> used in the views.</p>

<p>A skin is an array of name-value pairs that can be used to initialize the properties of a widget. A skin belongs to a widget class, and a widget class can have multiple skins identified by their names. For example, we can have a skin for the <a href="/doc/api/1.1/CLinkPager">CLinkPager</a> widget and the skin is named as <code>classic</code>.</p>

<p>In order to use the skin feature, we first need to modify the application configuration by configuring the <a href="/doc/api/1.1/CWidgetFactory#enableSkin">CWidgetFactory::enableSkin</a> property to be true for the <code>widgetFactory</code> application component:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">return</span> <span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">components</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
        <span class="hl-quotes">'</span><span class="hl-string">widgetFactory</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
            <span class="hl-quotes">'</span><span class="hl-string">enableSkin</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">true</span><span class="hl-code">,
        </span><span class="hl-brackets">)</span><span class="hl-code">,
    </span><span class="hl-brackets">)</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>Please note that in versions prior to 1.1.3, you need to use the following configuration to enable widget skinning:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-reserved">return</span> <span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">components</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
        <span class="hl-quotes">'</span><span class="hl-string">widgetFactory</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
            <span class="hl-quotes">'</span><span class="hl-string">class</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">CWidgetFactory</span><span class="hl-quotes">'</span><span class="hl-code">,
        </span><span class="hl-brackets">)</span><span class="hl-code">,
    </span><span class="hl-brackets">)</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>We then create the needed skins. Skins belonging to the same widget class are stored in a single PHP script file whose name is the widget class name. All these skin files are stored under <code>protected/views/skins</code>, by default. If you want to change this to be a different directory, you may configure the <code>skinPath</code> property of the <code>widgetFactory</code> component. As an example, we may create under <code>protected/views/skins</code> a file named <code>CLinkPager.php</code> whose content is as follows,</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-inlinetags">&lt;?php</span>
<span class="hl-reserved">return</span> <span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">default</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
        <span class="hl-quotes">'</span><span class="hl-string">nextPageLabel</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">next</span><span class="hl-quotes">'</span><span class="hl-code">,
        </span><span class="hl-quotes">'</span><span class="hl-string">prevPageLabel</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">prev</span><span class="hl-quotes">'</span><span class="hl-code">,
    </span><span class="hl-brackets">)</span><span class="hl-code">,
    </span><span class="hl-quotes">'</span><span class="hl-string">classic</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
        <span class="hl-quotes">'</span><span class="hl-string">header</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-quotes">'</span><span class="hl-code">,
        </span><span class="hl-quotes">'</span><span class="hl-string">maxButtonCount</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-number">5</span><span class="hl-code">,
    </span><span class="hl-brackets">)</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-code">;</span></pre></div></div>

<p>In the above, we create two skins for the <a href="/doc/api/1.1/CLinkPager">CLinkPager</a> widget: <code>default</code> and <code>classic</code>. The former is the skin that will be applied to any <a href="/doc/api/1.1/CLinkPager">CLinkPager</a> widget that we do not explicitly specify its <code>skin</code> property, while the latter is the skin to be applied to a <a href="/doc/api/1.1/CLinkPager">CLinkPager</a> widget whose <code>skin</code> property is specified as <code>classic</code>. For example, in the following view code, the first pager will use the <code>default</code> skin while the second the <code>classic</code> skin:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-inlinetags">&lt;?php</span> <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">widget</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-brackets">)</span><span class="hl-code">; </span><span class="hl-inlinetags">?&gt;</span><span class="hl-code">
 
&lt;?</span><span class="hl-identifier">php</span> <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">widget</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-reserved">array</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">skin</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">classic</span><span class="hl-quotes">'</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">; </span><span class="hl-inlinetags">?&gt;</span></pre></div></div>

<p>If we create a widget with a set of initial property values, they will take precedence and be merged with any applicable skin. For example, the following view code will create a pager whose initial values will be <code>array('header'=&gt;'', 'maxButtonCount'=&gt;6, 'cssFile'=&gt;false)</code>, which is the result of merging the initial property values specified in the view and the <code>classic</code> skin.</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-inlinetags">&lt;?php</span> <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">widget</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
    <span class="hl-quotes">'</span><span class="hl-string">skin</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-quotes">'</span><span class="hl-string">classic</span><span class="hl-quotes">'</span><span class="hl-code">,
    </span><span class="hl-quotes">'</span><span class="hl-string">maxButtonCount</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-number">6</span><span class="hl-code">,
    </span><span class="hl-quotes">'</span><span class="hl-string">cssFile</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">false</span><span class="hl-code">,
</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">; </span><span class="hl-inlinetags">?&gt;</span></pre></div></div>

<p>Note that the skin feature does NOT require using themes. However, when a theme is active, Yii will also look for skins under the <code>skins</code> directory of the theme's view directory (e.g. <code>WebRoot/themes/classic/views/skins</code>). In case a skin with the same name exists in both the theme and the main application view directories, the theme skin will take precedence.</p>

<p>If a widget is using a skin that does not exist, Yii will still create the widget as usual without any error.</p>

<blockquote class="info">
<p><strong>Info:</strong> Using skin may degrade the performance because Yii needs to look for the skin file the first time a widget is being created.</p>
</blockquote>

<p>Skin is very similar to the global widget customization feature. The main
differences are as follows.</p>

<ul>
<li>Skin is more related with the customization of presentational property values;</li>
<li>A widget can have multiple skins;</li>
<li>Skin is themeable;</li>
<li>Using skin is more expensive than using global widget customization.</li>
</ul>

<div class="revision"><div class="google-ad" style="margin:-60px 0 5px 200px;">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-3732587985864947";
google_ad_slot = "7116172008";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>$Id$</div>
</div>
                <div class="prev-next-nav">
                            <div class="prev-topic"><a href="/doc/guide/1.1/en/topics.auth">Authentication and Authorization</a></div>
                                        <div class="next-topic"><a href="/doc/guide/1.1/en/topics.logging">Logging</a></div>
                    </div>
        
		        <div class="widget-comment-list" id="comments">
	<div class="comments">
		<h3>Total 3 comments</h3>
				<div class="comment alt-0">
			<a class="cid" id="c5895" title="permalink to this comment" href="#c5895">#5895</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=5895"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=5895&amp;vote=1"><span>1</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=5895&amp;vote=0"><span>3</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/28747/">MadAnd</a> at 2011/11/23 08:02am</div>
			<div class="title">Override widget css globally</div>
			<div class="content"><p>If you want to configure some widget css in you main application config file, you probably find that Yii::app()-&gt;baseUrl is not accessible yet. So you might use something like this in such case:</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-quotes">'</span><span class="hl-string">components</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
        <span class="hl-quotes">'</span><span class="hl-string">widgetFactory</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
            <span class="hl-quotes">'</span><span class="hl-string">widgets</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
                <span class="hl-quotes">'</span><span class="hl-string">CLinkPager</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-reserved">array</span><span class="hl-brackets">(</span>
                    <span class="hl-quotes">'</span><span class="hl-string">cssFile</span><span class="hl-quotes">'</span><span class="hl-code">=&gt;</span><span class="hl-brackets">(</span><span class="hl-identifier">strlen</span><span class="hl-brackets">(</span><span class="hl-identifier">dirname</span><span class="hl-brackets">(</span><span class="hl-var">$_SERVER</span><span class="hl-brackets">[</span><span class="hl-quotes">'</span><span class="hl-string">SCRIPT_NAME</span><span class="hl-quotes">'</span><span class="hl-brackets">]</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">&gt;</span><span class="hl-number">1</span><span class="hl-code"> ? </span><span class="hl-identifier">dirname</span><span class="hl-brackets">(</span><span class="hl-var">$_SERVER</span><span class="hl-brackets">[</span><span class="hl-quotes">'</span><span class="hl-string">SCRIPT_NAME</span><span class="hl-quotes">'</span><span class="hl-brackets">]</span><span class="hl-brackets">)</span><span class="hl-code"> : </span><span class="hl-quotes">'</span><span class="hl-quotes">'</span> <span class="hl-brackets">)</span><span class="hl-code"> . </span><span class="hl-quotes">'</span><span class="hl-string">/css/pager.css</span><span class="hl-quotes">'</span><span class="hl-code">,
                </span><span class="hl-brackets">)</span><span class="hl-code">,
            </span><span class="hl-brackets">)</span><span class="hl-code">,
        </span><span class="hl-brackets">)</span><span class="hl-code">,
    </span><span class="hl-brackets">)</span><span class="hl-code">,</span></pre></div></div>
</div>
					</div>
				<div class="comment alt-1">
			<a class="cid" id="c4775" title="permalink to this comment" href="#c4775">#4775</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=4775"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=4775&amp;vote=1"><span>3</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=4775&amp;vote=0"><span>0</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/26147/">Revelis Luc Bonnin</a> at 2011/08/14 09:33am</div>
			<div class="title">Take care of automated loaded js files...</div>
			<div class="content"><p>When using a specific theme, sometimes we load specific js files.
If your are a newbie in Yii theming, don't forget to have a look at 
Yii::app()-&gt;getClientScript();
and related automated insertion when you are using Zii widgets for example.</p>

<p>A common issue (i experimented it with my first yii project) is to create your own main.php layout and insert js file such as jquery in your </p> section.
If you do it old fashion way you probably do

<div class="hl-code"><div class="hl-main"><pre><span class="hl-code">&lt;</span><span class="hl-identifier">script</span> <span class="hl-identifier">type</span><span class="hl-code">=</span><span class="hl-quotes">"</span><span class="hl-string">text/javascript</span><span class="hl-quotes">"</span> <span class="hl-identifier">src</span><span class="hl-code">=</span><span class="hl-quotes">"</span><span class="hl-string">&lt;?php echo Yii::app()-&gt;theme-&gt;baseUrl; ?&gt;/js/jqueryFileThatIDownloadedMyseilfAndPutIntoMyThemeJsFolder.min.js</span><span class="hl-quotes">"</span><span class="hl-code">&gt;&lt;/</span><span class="hl-identifier">script</span><span class="hl-code">&gt;</span></pre></div></div>

<p>It works great but if you insert a zii widget such aszii.widgets.grid.CGridView, you will create a conflict by inserting twice jquery lib and reset some required object. Js error such as '$.param.querystring is not a function' could be painful...</p>

<p>So don't forget to get into Yii getClientScript() by looking at existing theme examples or app examples.</p>
</div>
					</div>
				<div class="comment alt-0">
			<a class="cid" id="c4739" title="permalink to this comment" href="#c4739">#4739</a>
			<a class="widget-reporter" title="Please report to us if you find any inappropriate content." href="/site/report/?type=Comment&amp;id=4739"><span>report it</span></a>			<div class="widget-voter"><ul>
	<li class="vote up"><a title="Thumb up" class="g-login" href="/site/vote/?type=Comment&amp;id=4739&amp;vote=1"><span>3</span></a></li>
	<li class="vote down"><a title="Thumb down" class="g-login" href="/site/vote/?type=Comment&amp;id=4739&amp;vote=0"><span>0</span></a></li>
</ul>
<div class="clear"></div></div>			<div class="meta"><a class="g-user-rank-link" href="/user/26147/">Revelis Luc Bonnin</a> at 2011/08/10 09:03am</div>
			<div class="title">Override a layout in your theme</div>
			<div class="content"><p>If your want to override a layout in your theme without hardcoding the theme layout path in your controller (which won't work if you modify your theme), you can add a beforeAction() method in the Controller component.
Using this piece of code, you will be able to keep gii generated code with $layout starting with '//layouts/'.</p>

<div class="hl-code"><div class="hl-main"><pre><span class="hl-comment">/*</span><span class="hl-comment">*
 * Manage theme layout is overriden. 
 * If given layout is overriden, use it instead of protected folder one. Else, use protected folder one.
 *</span><span class="hl-inlinedoc"> @see </span><span class="hl-comment">CController::beforeAction()
 </span><span class="hl-comment">*/</span>
<span class="hl-reserved">public</span> <span class="hl-reserved">function</span> <span class="hl-identifier">beforeAction</span><span class="hl-brackets">(</span><span class="hl-var">$action</span><span class="hl-brackets">)</span>
<span class="hl-brackets">{</span>
    <span class="hl-comment">//</span><span class="hl-comment"> If application is using a theme, replace default layout controller variable that start with '//layouts/' with a theme link</span>
    <span class="hl-reserved">if</span><span class="hl-brackets">(</span><span class="hl-reserved">empty</span><span class="hl-brackets">(</span><span class="hl-identifier">Yii</span><span class="hl-code">::</span><span class="hl-identifier">app</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">-&gt;</span><span class="hl-identifier">theme</span><span class="hl-code">-&gt;</span><span class="hl-identifier">name</span><span class="hl-brackets">)</span><span class="hl-code"> == </span><span class="hl-reserved">false</span><span class="hl-code"> &amp;&amp; </span><span class="hl-reserved">isset</span><span class="hl-brackets">(</span><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">layout</span><span class="hl-brackets">)</span><span class="hl-code"> == </span><span class="hl-reserved">true</span><span class="hl-code"> &amp;&amp; </span><span class="hl-identifier">strpos</span><span class="hl-brackets">(</span><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">layout</span><span class="hl-code">, </span><span class="hl-quotes">'</span><span class="hl-string">//layouts/</span><span class="hl-quotes">'</span><span class="hl-brackets">)</span><span class="hl-code"> === </span><span class="hl-number">0</span><span class="hl-brackets">)</span>
    <span class="hl-brackets">{</span>           
        <span class="hl-comment">//</span><span class="hl-comment"> Replace path with slash by dot.</span>
        <span class="hl-var">$sThemeLayout</span><span class="hl-code"> = </span><span class="hl-quotes">'</span><span class="hl-string">webroot.themes.</span><span class="hl-quotes">'</span><span class="hl-code">.</span><span class="hl-identifier">Yii</span><span class="hl-code">::</span><span class="hl-identifier">app</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">-&gt;</span><span class="hl-identifier">theme</span><span class="hl-code">-&gt;</span><span class="hl-identifier">name</span><span class="hl-code">.</span><span class="hl-quotes">'</span><span class="hl-string">.views.layouts.</span><span class="hl-quotes">'</span><span class="hl-code">.</span><span class="hl-identifier">str_replace</span><span class="hl-brackets">(</span><span class="hl-quotes">'</span><span class="hl-string">/</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-quotes">'</span><span class="hl-string">.</span><span class="hl-quotes">'</span><span class="hl-code">, </span><span class="hl-identifier">substr</span><span class="hl-brackets">(</span><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">layout</span><span class="hl-code">,</span><span class="hl-number">10</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">;
 
        </span><span class="hl-comment">//</span><span class="hl-comment"> If theme override given layout, get it from theme</span>
        <span class="hl-reserved">if</span><span class="hl-brackets">(</span><span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">getLayoutFile</span><span class="hl-brackets">(</span><span class="hl-var">$sThemeLayout</span><span class="hl-brackets">)</span><span class="hl-code"> !== </span><span class="hl-reserved">false</span><span class="hl-brackets">)</span>
            <span class="hl-var">$this</span><span class="hl-code">-&gt;</span><span class="hl-identifier">layout</span><span class="hl-code"> = </span><span class="hl-var">$sThemeLayout</span><span class="hl-code">;          
    </span><span class="hl-brackets">}</span>
    <span class="hl-reserved">return</span> <span class="hl-reserved">true</span><span class="hl-code">;
</span><span class="hl-brackets">}</span></pre></div></div>
</div>
					</div>
			</div>
	<div id="comment-add">
		<h3 id="add-comment">Leave a comment</h3>

			<p>Please <a class="g-login" rel="/doc/guide/1.1/en/topics.theming#add-comment" href="#">login</a> to leave your comment.</p>
		</div>
</div>
           </div>
</div>
					</div>
				
								<div class="clear"></div>
			</div>
			<div class="clear"></div>
					</div>
	</div>

	<div class="layout-main-footer">
		<div class="container_12">
			<div class="grid_6">
				<ul class="menu">
				<li class="main">About
<ul class="sub">
<li><a href="/about/">About Yii</a></li>
<li><a href="/features/">Features</a></li>
<li><a href="/performance/">Performance</a></li>
<li><a href="/license/">License</a></li>
<li><a href="/contact/">Contact Us</a></li>
</ul>
</li>
<li class="main">Downloads
<ul class="sub">
<li><a href="/download/">Framework</a></li>
<li><a href="/extensions/">Extensions</a></li>
<li><a href="/demos/">Demos</a></li>
<li><a href="/logo/">Logo</a></li>
</ul>
</li>
<li class="main">Documentation
<ul class="sub">
<li><a href="/tour/">Take the Tour</a></li>
<li><a href="/tutorials/">Tutorials</a></li>
<li><a href="/doc/api/">Class Reference</a></li>
<li><a href="/doc-2.0/guide-index.html">Guide 2.0</a></li>
<li><a href="/doc-2.0/index.html">Class Reference 2.0</a></li>
<li><a href="/wiki/">Wiki</a></li>
<li><a href="/screencasts/">Screencasts</a></li>
<li><a href="/resources/">Resources</a></li>
</ul>
</li>
<li class="main">Development
<ul class="sub">
<li><a href="/contribute/">Contribute to Yii</a></li>
<li><a href="https://github.com/yiisoft/yii/commits/master">Latest Updates</a></li>
<li><a href="https://github.com/yiisoft/yii/issues/new">Report a Bug</a></li>
<li><a href="/security/">Report a Security Issue</a></li>
</ul>
</li>
<li class="main">Community
<ul class="sub">
<li><a href="/forum/">Forum</a></li>
<li><a href="/chat/">Live Chat</a></li>
<li><a href="/news/">News</a></li>
<li><a href="/user/halloffame/">Hall of Fame</a></li>
<li><a href="/badges/">Badges</a></li>
</ul>
</li>
				</ul>
			</div>
			<div class="grid_1">&nbsp;</div>
			<div class="grid_5">
				<h3>Yii Supporters</h3>
				<ul class="g-list-none supporters">

				</ul>
			</div>

			<div class="clear"></div>
			<div class="grid_12 copyright">
				<ul class="social">
					<li class="twitter"><a href="https://twitter.com/yiiframework" target="_blank" rel="nofollow" title="follow us on twitter">Twitter</a></li>
					<li class="facebook"><a href="https://www.facebook.com/groups/yiitalk/" target="_blank" rel="nofollow" title="join yii group at facebook">Facebook</a></li>
					<li class="linkedin"><a href="http://www.linkedin.com/groups?gid=1483367" target="_blank" rel="nofollow" title="join yii group at linkedin">LinkedIn</a></li>
					<li class="feeds"><a title="RSS feeds" href="/rss.xml/">RSS Feeds</a></li>
				</ul>
				<div class="clear"></div>
				<a href="/tos/">Terms of Service</a> |
				<a href="/license/">License</a> |
				<a href="/contact/">Contact Us</a><br/>
				Copyright &copy; 2015 by <a href="http://www.yiisoft.com">Yii Software LLC</a>.
				All Rights Reserved.
			</div>
			<div class="clear"></div>
		</div>
	</div>
</div>

    <script type="text/javascript" src="/js/site-20121004195728.js"></script>


<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['site._setAccount', 'UA-5843896-1']);
_gaq.push(['site._trackPageview']);

(function() {
	var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<script type="text/javascript">
function trackClick(link, action, category) {
	action=action || link.href;
	category=category || 'Outbound Links';
	try {
		_gaq.push(['site._trackEvent', category, action]);
		setTimeout('document.location = "' + link.href + '"', 250);
	}catch(err){}
	return false;
}
</script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
</body>
</html>
